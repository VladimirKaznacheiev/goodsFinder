Index: app/src/main/java/com/example/goodsfinder/BottomNavigationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.goodsfinder;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.app.DialogFragment;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.goodsfinder.R;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.skydoves.balloon.ArrowOrientation;\r\nimport com.skydoves.balloon.Balloon;\r\nimport com.skydoves.balloon.BalloonAnimation;\r\nimport com.skydoves.balloon.BalloonSizeSpec;\r\nimport com.skydoves.balloon.OnBalloonDismissListener;\r\n\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.ui.AppBarConfiguration;\r\nimport androidx.navigation.ui.NavigationUI;\r\n\r\nimport static java.security.AccessController.getContext;\r\n\r\npublic class BottomNavigationActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener{\r\n\r\n    DialogFragment dlg;\r\n    DialogFragment dlg2;\r\n\r\n    Balloon balloon4;\r\n\r\n    DrawerLayout drawerLayout;\r\n    ActionBarDrawerToggle actionBarDrawerToggle;\r\n    Toolbar toolbar;\r\n    NavigationView navigationView;\r\n\r\n    SharedPreferences mSettings;\r\n\r\n    FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();\r\n\r\n    HomeFragment homeFragment = new HomeFragment();\r\n    FavouriteFragment favouriteFragment = new FavouriteFragment();\r\n\r\n    FrameLayout fragmentLayout;\r\n    FrameLayout fragmentLayout2;\r\n\r\n    private final Handler uiHandler = new Handler();\r\n\r\n    Balloon balloon8;\r\n    Balloon balloon9;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private void myClickItem(MenuItem item){\r\n        switch (item.getItemId()) {\r\n            case R.id.navigation_home:\r\n                fragmentLayout.setVisibility(View.VISIBLE);\r\n                fragmentLayout2.setVisibility(View.INVISIBLE);\r\n                break;\r\n\r\n            case R.id.navigation_dashboard:\r\n                fragmentLayout.setVisibility(View.INVISIBLE);\r\n                fragmentLayout2.setVisibility(View.VISIBLE);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    View view;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_bottom_navigation);\r\n\r\n        fragmentLayout = findViewById(R.id.fragment_layout);\r\n        fragmentLayout2 = findViewById(R.id.fragment_layout2);\r\n\r\n        transaction = getSupportFragmentManager().beginTransaction();\r\n        transaction.replace(R.id.fragment_layout, homeFragment);\r\n        transaction.replace(R.id.fragment_layout2, favouriteFragment);\r\n        transaction.commit();\r\n\r\n        fragmentLayout.setVisibility(View.VISIBLE);\r\n        fragmentLayout2.setVisibility(View.INVISIBLE);\r\n        String APP_PREFERENCES = \"searches\";\r\n\r\n\r\n\r\n        mSettings = getSharedPreferences(APP_PREFERENCES, Context.MODE_PRIVATE);\r\n\r\n\r\n        dlg = new Dialog();\r\n        dlg2 = new Dialog2();\r\n\r\n        toolbar = findViewById(R.id.toolbar);\r\n        toolbar.findViewById(R.id.help_btn).setOnClickListener(this::onClick);\r\n        //((AppCompatActivity)getActivity()).setSupportActionBar(toolbar);\r\n\r\n        drawerLayout = findViewById(R.id.drawer);\r\n        navigationView = findViewById(R.id.navigationView);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n\r\n        actionBarDrawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.open, R.string.close);\r\n        drawerLayout.addDrawerListener(actionBarDrawerToggle);\r\n        actionBarDrawerToggle.setDrawerIndicatorEnabled(true);\r\n        actionBarDrawerToggle.syncState();\r\n\r\n        BottomNavigationView bottomNavigationView =  findViewById(R.id.nav_view);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {\r\n            myClickItem(item); //call here\r\n            return true;\r\n        });\r\n\r\n        view = bottomNavigationView.findViewById(R.id.navigation_home);\r\n\r\n        view.performClick();\r\n\r\n\r\n        balloon4 = new Balloon.Builder(this)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.75f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(this.getResources().getString((R.string.balloon4)))\r\n                .setTextColor(ContextCompat.getColor(this, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(this, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        View view1 = bottomNavigationView.findViewById(R.id.navigation_dashboard);\r\n                        view1.performClick();\r\n\r\n                        //запустить 5 шарик надо\r\n                    }\r\n                })\r\n                .build();\r\n\r\n\r\n        //ЭТО УКАЖЕТ НА 3 ПОЛОСКИ И ВИДЖЕТ ОБУЧЕНИЯ\r\n\r\n        balloon8 = new Balloon.Builder(this)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.5f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(this.getResources().getString((R.string.balloon8)))\r\n                .setTextColor(ContextCompat.getColor(this, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(this, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        balloon9.showAlignBottom(toolbar.findViewById(R.id.help_btn));\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        balloon9 = new Balloon.Builder(this)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(1f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(this.getResources().getString((R.string.balloon9)))\r\n                .setTextColor(ContextCompat.getColor(this, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(this, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        //тут я запишу, что юзер обучился в шаред\r\n                    }\r\n                })\r\n                .build();\r\n\r\n\r\n\r\n\r\n\r\n\r\n        uiHandler.post(\r\n                new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        boolean tmp = true;\r\n                        ///while (tmp){\r\n                            if(mSettings.getString(\"give_enter1\", \"\").equals(\"1\")){\r\n                                Log.d(\"ENTER\", \"ENTER\");\r\n                                tmp = false;\r\n                            }\r\n                        //}\r\n                    }\r\n                });\r\n\r\n        //findViewById(R.id.navigation_dashboard).setSelected(true);\r\n        //findViewById(R.id.navigation_dashboard).setSelected(false);\r\n\r\n//        Intent intent = getIntent();\r\n//        if(intent!=null) {\r\n//            getSupportActionBar().setTitle(String.valueOf(FirebaseAuth.getInstance().getCurrentUser().getEmail()));\r\n//        }\r\n\r\n/*        BottomNavigationView navView = findViewById(R.id.nav_view);\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(\r\n                R.id.navigation_home, R.id.navigation_dashboard)\r\n                .build();\r\n        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);\r\n        NavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);\r\n        NavigationUI.setupWithNavController(navView, navController);*/\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        if (menuItem.getItemId() == R.id.logout){\r\n            Log.d(\"TEST\", \"LOGOUT\");\r\n            FirebaseAuth.getInstance().signOut();\r\n\r\n            Intent intent = new Intent(BottomNavigationActivity.this, LoginActivity.class);\r\n            startActivity(intent);\r\n            finish();\r\n\r\n        } else if (menuItem.getItemId() == R.id.theme_dark){\r\n            if(mSettings.getString(\"theme\", \"\").equals(\"light\")){\r\n                view.performClick();\r\n                dlg.show(getFragmentManager(), \"dlg\");\r\n            }\r\n        } else if (menuItem.getItemId() == R.id.theme_light){\r\n            if(mSettings.getString(\"theme\", \"\").equals(\"dark\")){\r\n                view.performClick();\r\n                dlg2.show(getFragmentManager(), \"dlg2\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n        Log.d(\"THEME\", \"SETTED\");\r\n\r\n        return true;\r\n    }\r\n\r\n    public void onClick(View view) {\r\n\r\n        if(view.getId() == R.id.help_btn) {\r\n            Log.d(\"LEARN\", \"LEARN\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/goodsfinder/BottomNavigationActivity.java	(revision 3022c5ba5ed64e93d4a63b7f2315d1bef730cc1e)
+++ app/src/main/java/com/example/goodsfinder/BottomNavigationActivity.java	(date 1619527560797)
@@ -4,6 +4,7 @@
 import androidx.appcompat.widget.Toolbar;
 
 import android.app.DialogFragment;
+import android.app.Fragment;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -14,6 +15,7 @@
 import android.view.View;
 import android.widget.Button;
 import android.widget.FrameLayout;
+import android.widget.Spinner;
 import android.widget.Toast;
 
 import com.example.goodsfinder.R;
@@ -163,6 +165,12 @@
                 })
                 .build();
 
+                        Fragment favFrag = getFragmentManager().findFragmentById(R.id.fragment_layout2);
+
+
+
+
+                      // balloon4.showAlignBottom(favFrag.getView().findViewById(R.id.spinner));
 
         //ЭТО УКАЖЕТ НА 3 ПОЛОСКИ И ВИДЖЕТ ОБУЧЕНИЯ
 
Index: app/src/main/java/com/example/goodsfinder/FavouriteFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.goodsfinder;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.res.Resources;\r\nimport android.graphics.Bitmap;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.StrictMode;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport android.widget.AdapterView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.firebase.ui.database.FirebaseListAdapter;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.skydoves.balloon.ArrowOrientation;\r\nimport com.skydoves.balloon.Balloon;\r\nimport com.skydoves.balloon.BalloonAnimation;\r\nimport com.skydoves.balloon.BalloonSizeSpec;\r\nimport com.skydoves.balloon.OnBalloonDismissListener;\r\n\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\nimport org.jsoup.nodes.Element;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class FavouriteFragment extends Fragment {\r\n\r\n\r\n\r\n\r\n    private FirebaseAuth mAuth;\r\n    private DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference();;\r\n    private List<String> DiscrTasks;\r\n\r\n    private Document doc = null;\r\n    private Document doc1 = null;\r\n    private final Handler uiHandler = new Handler();\r\n\r\n    private String priceRozetka = \"0\";\r\n    private int counterRozetka = 0;\r\n    private int iRozetka = 0;\r\n    private boolean isFor = false;\r\n\r\n    boolean isLoadedRozetka = false;\r\n    private  boolean isShowed = false;\r\n\r\n    boolean isNotEmpty = false;\r\n\r\n    private List<String> urlsRozetka = new ArrayList<String>();\r\n    private List<String> positionsRozetka = new ArrayList<String>();\r\n\r\n    private List<String> infoLoaded = new ArrayList<String>();\r\n    private List<String> infoLoadedUp = new ArrayList<String>();\r\n\r\n    TextView errorTextChoosen;\r\n    ProgressBar progressBar;\r\n    TextView emptyTextChoosen;\r\n\r\n    private Context context;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        this.context = context;\r\n    }\r\n\r\n    FirebaseUser user = mAuth.getInstance().getCurrentUser();\r\n    //String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n\r\n    WebView browserRozetka;\r\n\r\n    ArrayList<String> favouritesImagesList = new ArrayList<>();\r\n    ArrayList<Integer> favouritesStoreImagesList = new ArrayList<>();\r\n    ArrayList<String> favouritesOldPricesList = new ArrayList<>();\r\n    ArrayList<String> favouritesPricesList = new ArrayList<>();\r\n    ArrayList<String> favouritesNamesList = new ArrayList<>();\r\n    ArrayList<String> favouritesUrlList = new ArrayList<>();\r\n    ArrayList<Integer> favouritesColourList = new ArrayList<>();\r\n\r\n    Balloon balloon5;\r\n    Balloon balloon6;\r\n    Balloon balloon7;\r\n\r\n\r\n\r\n\r\n    ArrayList<String> favouritesList = new ArrayList<>();\r\n\r\n    ListView goodsListView;\r\n    MyAdapter adapter1;\r\n\r\n\r\n    FirebaseListAdapter mAdapter;\r\n\r\n    boolean isConnected() {\r\n        boolean connected = false;\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            connected = true;\r\n        } else\r\n            connected = false;\r\n\r\n        return connected;\r\n    }\r\n\r\n\r\n    private void loadChoosen(){\r\n\r\n        mDatabase.child(\"Users\").child(user.getUid()).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                Map<String, Object> td = (HashMap<String, Object>) snapshot.getValue();\r\n                favouritesUrlList.clear();\r\n                favouritesColourList.clear();\r\n                favouritesImagesList.clear();\r\n                favouritesStoreImagesList.clear();\r\n                favouritesNamesList.clear();\r\n                favouritesPricesList.clear();\r\n                favouritesOldPricesList.clear();\r\n                infoLoaded.clear();\r\n                infoLoadedUp.clear();\r\n                favouritesList.clear();\r\n                urlsRozetka.clear();\r\n\r\n                boolean isNotEmpty = false;\r\n\r\n                for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n\r\n                    isNotEmpty = true;\r\n\r\n                    int counter = 0;\r\n                    DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child(childDataSnapshot.getKey());\r\n                    Map<String, Object> taskMap = new HashMap<String, Object>();\r\n                    objRef.updateChildren(taskMap);\r\n\r\n\r\n                    favouritesList.add(String.valueOf(childDataSnapshot.getValue()));\r\n                    String[] goodsInfo = String.valueOf(childDataSnapshot.getValue()).split(\"SPLITFORBUY\", 4);\r\n\r\n\r\n                    favouritesUrlList.add(counter, goodsInfo[0]);\r\n                    favouritesImagesList.add(counter, goodsInfo[1]);\r\n                    favouritesNamesList.add(counter, goodsInfo[2]);\r\n\r\n\r\n                    if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                        favouritesStoreImagesList.add(counter,R.drawable.eldoradologo);\r\n                        favouritesColourList.add(counter,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                    }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                        favouritesStoreImagesList.add(counter,R.drawable.allologo);\r\n                        favouritesColourList.add(counter, ContextCompat.getColor(context,R.color.allo_colour));\r\n                    }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                        favouritesStoreImagesList.add(counter,R.drawable.citruslogo);\r\n                        favouritesColourList.add(counter,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                    }\r\n\r\n                    if (goodsInfo[0].contains(\"allo.ua\")) {\r\n                        try {\r\n\r\n                            mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                            for (int i = 0; i < positionsRozetka.size(); i++) {\r\n                                positionsRozetka.set(i, String.valueOf(Integer.parseInt(positionsRozetka.get(i)) + 1));\r\n                            }\r\n\r\n                            doc = Jsoup.connect(goodsInfo[0]).get();\r\n                            Element elements = doc.getElementsByAttributeValue(\"class\", \"sum\").last();\r\n                            Element elements2 = doc.getElementsByAttributeValue(\"class\", \"sum\").first();\r\n\r\n                            if (elements!=null){\r\n                                String price1 = elements.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n\r\n                                if (elements2!=null && !elements2.equals(elements)){\r\n                                    String price2 = elements2.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n                                    favouritesPricesList.add(counter, price1);\r\n                                    favouritesOldPricesList.add(counter, price2);\r\n\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+price2+\"SPLITFORBUY\"+price1);\r\n                                } else {\r\n                                    favouritesPricesList.add(counter,  price1);\r\n                                    favouritesOldPricesList.add(counter, \" \");\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+\"0\"+\"SPLITFORBUY\"+price1);\r\n                                }\r\n\r\n\r\n\r\n                            } else {\r\n                                favouritesPricesList.add(counter, context.getString(R.string.form_price));\r\n                                favouritesOldPricesList.add(counter, \" \");\r\n                            }\r\n\r\n                        } catch (IOException e) {\r\n                            mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n                            e.printStackTrace();\r\n                        }\r\n                    } else if (goodsInfo[0].contains(\"https://eldorado.ua\")) {\r\n                        mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n\r\n\r\n                        for (int i = 0; i < positionsRozetka.size(); i++) {\r\n                            positionsRozetka.set(i, String.valueOf(Integer.parseInt(positionsRozetka.get(i)) + 1));\r\n                        }\r\n                        urlsRozetka.add(goodsInfo[0]);\r\n                        positionsRozetka.add(String.valueOf(counter));\r\n\r\n                        favouritesPricesList.add(counter,  context.getString(R.string.loading));\r\n                        favouritesOldPricesList.add(counter,  context.getString(R.string.loading));\r\n                        infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\");\r\n\r\n                    } else if (goodsInfo[0].contains(\"citrus.ua\")) {\r\n\r\n                        try {\r\n\r\n                            mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                            for (int i = 0; i < positionsRozetka.size(); i++) {\r\n                                positionsRozetka.set(i, String.valueOf(Integer.parseInt(positionsRozetka.get(i)) + 1));\r\n                            }\r\n\r\n                            doc = Jsoup.connect(goodsInfo[0]).get();\r\n                            Element elements = doc.getElementsByAttributeValue(\"class\", \"buy-section__new-price\").last();\r\n                            Element elements2 = doc.getElementsByAttributeValue(\"class\", \"buy-section__old-price\").last();\r\n\r\n/*                                String price1 = elements.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n                                String price2 = elements2.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";*/\r\n\r\n                            if (elements!=null){\r\n                                String price1 = elements.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n\r\n                                if (elements2!=null){\r\n                                    String price2 = elements2.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n                                    favouritesPricesList.add(counter, price1);\r\n                                    favouritesOldPricesList.add(counter, price2);\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+price2+\"SPLITFORBUY\"+price1);\r\n                                } else {\r\n                                    favouritesPricesList.add(counter,  price1);\r\n                                    favouritesOldPricesList.add(counter, \" \");\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+\"0\"+\"SPLITFORBUY\"+price1);\r\n                                }\r\n\r\n                            } else {\r\n                                favouritesPricesList.add(counter, context.getString(R.string.form_price));\r\n                                favouritesOldPricesList.add(counter, \" \");\r\n                                infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+\"0\"+\"SPLITFORBUY\"+\"0\");\r\n                            }\r\n\r\n\r\n\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n\r\n                    adapter1.notifyDataSetChanged();\r\n\r\n                    counter++;\r\n\r\n                }\r\n\r\n                if (!isNotEmpty){\r\n                    emptyTextChoosen.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                progressBar.setVisibility(View.GONE);\r\n\r\n                //Log.d(\"TEST\", String.valueOf(urlsRozetka));\r\n                //Log.d(\"TEST\", String.valueOf(positionsRozetka));\r\n\r\n\r\n                for (int i = 0; i < infoLoaded.size(); i++) {\r\n                    infoLoadedUp.add(i, infoLoaded.get(i));\r\n                }\r\n\r\n                iRozetka = 0;\r\n\r\n                try {\r\n                    browserRozetka.loadUrl(urlsRozetka.get(urlsRozetka.size() - 1));\r\n                } catch (Exception e) {\r\n                    isLoadedRozetka = true;\r\n                    e.printStackTrace();\r\n                    Log.d(\"ERROR\", \"Load Error\");\r\n                }\r\n                mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);\r\n        setRetainInstance(true);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_favourite2,container,false);\r\n\r\n        super.onCreate(savedInstanceState);\r\n        //setContentView(R.layout.chosen_goods_activity);\r\n\r\n        String[] filters = { context.getString(R.string.def),  context.getString(R.string.up), context.getString(R.string.down)};\r\n\r\n        Spinner spinner = (Spinner) view.findViewById(R.id.spinner);\r\n        ArrayAdapter<String> adapterSpinner = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_item, filters);\r\n        adapterSpinner.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinner.setAdapter(adapterSpinner);\r\n\r\n        balloon5 = new Balloon.Builder(context)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.5f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(context.getResources().getString((R.string.balloon5)))\r\n                .setTextColor(ContextCompat.getColor(context, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        balloon6.showAlignBottom(spinner);\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        balloon6 = new Balloon.Builder(context)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.5f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(context.getResources().getString((R.string.balloon6)))\r\n                .setTextColor(ContextCompat.getColor(context, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        balloon7.showAlignBottom(view.findViewById(R.id.btn_reload));\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        balloon7 = new Balloon.Builder(context)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.5f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(context.getResources().getString((R.string.balloon7)))\r\n                .setTextColor(ContextCompat.getColor(context, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        BottomNavigationView navigationView = ((BottomNavigationActivity)getContext()).findViewById(R.id.drawer);\r\n\r\n                        ((BottomNavigationActivity)getContext()).balloon8.showAlignRight(navigationView);\r\n                    }\r\n                })\r\n                .build();\r\n\r\n\r\n\r\n        AdapterView.OnItemSelectedListener itemSelectedListener = new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                String item = (String)parent.getItemAtPosition(position);\r\n\r\n                if (item.equals(context.getString(R.string.def)) && isLoadedRozetka){\r\n                    sortDefault();\r\n                    Log.d(\"TETS\", item);\r\n                } else if (item.equals(context.getString(R.string.up))){\r\n                    Log.d(\"ELDORADO\", String.valueOf(isLoadedRozetka));\r\n                    sortUp();\r\n                    Log.d(\"TETS\", item);\r\n                } else if (item.equals(context.getString(R.string.down))){\r\n                    sortDown();\r\n                    Log.d(\"TETS\", item);\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n            }\r\n        };\r\n        spinner.setOnItemSelectedListener(itemSelectedListener);\r\n\r\n        errorTextChoosen = view.findViewById(R.id.errorTextChoosen);\r\n        emptyTextChoosen = view.findViewById(R.id.emptyTextChoosen);\r\n        errorTextChoosen.setVisibility(View.INVISIBLE);\r\n        emptyTextChoosen.setVisibility(View.INVISIBLE);\r\n\r\n        progressBar = view.findViewById(R.id.progressBarChoosen);\r\n\r\n\r\n        if (!isConnected()){\r\n            progressBar.setVisibility(View.GONE);\r\n            errorTextChoosen.setVisibility(View.VISIBLE);\r\n        } else {\r\n            loadChoosen();\r\n        }\r\n\r\n        if (android.os.Build.VERSION.SDK_INT > 9)\r\n        {\r\n            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n            StrictMode.setThreadPolicy(policy);\r\n        }\r\n\r\n        browserRozetka = new WebView(getActivity());\r\n        getMoyo();\r\n        view.findViewById(R.id.btn_reload).setOnClickListener(this::onClick);\r\n\r\n        goodsListView = (ListView) view.findViewById(R.id.favouritesView);\r\n\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n\r\n        adapter1 = new MyAdapter(getActivity(),favouritesNamesList,favouritesPricesList,favouritesOldPricesList,favouritesImagesList,favouritesStoreImagesList ,favouritesUrlList,favouritesColourList);\r\n        goodsListView.setAdapter(adapter1);\r\n\r\n        goodsListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n\r\n                Uri address = Uri.parse(favouritesUrlList.get(i));\r\n                Intent openlinkIntent = new Intent(Intent.ACTION_VIEW, address);\r\n                startActivity(openlinkIntent);\r\n            }\r\n\r\n        });\r\n\r\n        return view;\r\n\r\n    }\r\n\r\n    void getMoyo() {\r\n        try {\r\n            browserRozetka.setVisibility(View.INVISIBLE);\r\n            browserRozetka.setLayerType(View.LAYER_TYPE_NONE, null);\r\n            browserRozetka.getSettings().setJavaScriptEnabled(true);\r\n            browserRozetka.getSettings().setBlockNetworkImage(false);\r\n            browserRozetka.getSettings().setDomStorageEnabled(true);\r\n            browserRozetka.getSettings().setLoadsImagesAutomatically(true);\r\n            browserRozetka.getSettings().setBlockNetworkLoads(false);\r\n            browserRozetka.getSettings().setJavaScriptCanOpenWindowsAutomatically(true);\r\n            browserRozetka.getSettings().setDefaultTextEncodingName(\"utf-8\");\r\n            //browserRozetka.getSettings().setLoadWithOverviewMode(true);\r\n\r\n\r\n            browserRozetka.addJavascriptInterface(new JSHtmlInterfaceMoyo(), \"JSBridge\");\r\n\r\n            browserRozetka.setWebViewClient(\r\n                    new WebViewClient() {\r\n\r\n                        @Override\r\n                        public void onPageStarted(WebView view, String url, Bitmap favicon) {\r\n                            super.onPageStarted(view, url, favicon);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPageFinished(WebView view, String url) {\r\n                            browserRozetka.loadUrl(\"javascript:window.JSBridge.showHTML('<html>'+document.getElementsByTagName('html')[0].innerHTML+'</html>');\");\r\n                            //Log.d(\"TEST1\", \"loaded\");\r\n                        }\r\n                    }\r\n            );\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Log.d(\"ERROR\", \"Rozetka Error\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private class JSHtmlInterfaceMoyo{\r\n        @android.webkit.JavascriptInterface\r\n        public void showHTML(String html) {\r\n            final String htmlContent = html;\r\n\r\n            uiHandler.post(\r\n                    new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n\r\n                            try {\r\n\r\n                                doc1 = Jsoup.parse(htmlContent);\r\n                                Log.d(\"ELDORADO\", doc1.getElementsByAttributeValue(\"class\", \"price-value\").last().text());\r\n                                //Log.d(\"ELDORADO\", doc1.getElementsByAttributeValue(\"class\", \"base-slick slick-slide-item\").last().html());\r\n                                priceRozetka = doc1.getElementsByAttributeValue(\"class\", \"price-value \").last().text();\r\n                                Element oldPriceRozetka = doc1.getElementsByAttributeValue(\"class\", \"old-price-value\").last();\r\n\r\n\r\n\r\n\r\n                                if (priceRozetka!=null){\r\n                                    String price1;\r\n                                    if (!priceRozetka.contains(context.getString(R.string.form_price))){\r\n                                        price1 = priceRozetka.replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\").replace(\".\", \"\") + \" грн\";\r\n                                    } else {\r\n                                        price1 = priceRozetka;\r\n                                    }\r\n\r\n\r\n                                    if (oldPriceRozetka!=null){\r\n                                        String price2 = oldPriceRozetka.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\").replace(\".\", \"\") + \" грн\";\r\n                                        Log.d(\"ELDORADOLOG\", String.valueOf(positionsRozetka+\", \"+iRozetka+\", \"+favouritesPricesList.size()));\r\n                                        favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), price1);\r\n                                        favouritesOldPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  price2);\r\n                                        infoLoaded.set(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  infoLoaded.get(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)))+price2+\"SPLITFORBUY\"+price1);\r\n                                    } else {\r\n                                        favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  price1);\r\n                                        favouritesOldPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  \" \");\r\n                                        infoLoaded.set(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  infoLoaded.get(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)))+\"0\"+\"SPLITFORBUY\"+price1);\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                } else {\r\n                                    favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), context.getString(R.string.form_price));\r\n                                    favouritesOldPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  \" \");\r\n                                }\r\n\r\n                                //favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), priceRozetka.replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\");\r\n                                adapter1.notifyDataSetChanged();\r\n                                progressBar.setVisibility(View.GONE);\r\n\r\n\r\n                                getActivity().runOnUiThread(new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n\r\n                                        if(iRozetka>=urlsRozetka.size()-1){\r\n\r\n                                            for (int i = 0; i < infoLoaded.size(); i++) {\r\n                                                infoLoadedUp.set(i, infoLoaded.get(i));\r\n                                            }\r\n\r\n                                            Log.d(\"ELDORADO\", \"TRUE\");\r\n                                            isLoadedRozetka = true;\r\n\r\n\r\n                                            return;\r\n                                        }\r\n                                            iRozetka ++;\r\n                                            browserRozetka.loadUrl(urlsRozetka.get(urlsRozetka.size()-1-iRozetka));\r\n\r\n\r\n                                    }\r\n                                });\r\n\r\n\r\n                                //favouritesPricesList.add(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), priceRozetka.replace(\"₴\", \"\"));\r\n\r\n\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                                Log.d(\"ERROR\", \"Moyo Error\");\r\n                                priceRozetka = \"0\";\r\n                            }\r\n                        }\r\n                    }\r\n            );\r\n        }\r\n    }\r\n\r\n    public void onClick(View view) {\r\n\r\n        if(view.getId() == R.id.btn_reload) {\r\n\r\n            if (isConnected()){\r\n\r\n                errorTextChoosen.setVisibility(View.INVISIBLE);\r\n                emptyTextChoosen.setVisibility(View.INVISIBLE);\r\n                progressBar.setVisibility(View.VISIBLE);\r\n\r\n\r\n\r\n\r\n                favouritesUrlList.clear();\r\n                favouritesImagesList.clear();\r\n                favouritesStoreImagesList.clear();\r\n                favouritesNamesList.clear();\r\n                favouritesPricesList.clear();\r\n                favouritesOldPricesList.clear();\r\n                favouritesColourList.clear();\r\n                positionsRozetka.clear();\r\n                isLoadedRozetka = false;\r\n                iRozetka = 0;\r\n                adapter1.notifyDataSetChanged();\r\n                infoLoaded.clear();\r\n                infoLoadedUp.clear();\r\n                favouritesList.clear();\r\n                urlsRozetka.clear();\r\n\r\n\r\n                loadChoosen();\r\n            } else {\r\n                Toast.makeText(getActivity(),context.getString(R.string.internet_error),Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n    public void sortDefault(){\r\n        if (isLoadedRozetka){\r\n\r\n            Log.d(\"COMMON\", String.valueOf(infoLoaded));\r\n\r\n            favouritesUrlList.clear();\r\n            favouritesImagesList.clear();\r\n            favouritesStoreImagesList.clear();\r\n            favouritesNamesList.clear();\r\n            favouritesPricesList.clear();\r\n            favouritesOldPricesList.clear();\r\n            favouritesColourList.clear();\r\n\r\n            for (int i = 0; i < infoLoaded.size(); i++) {\r\n                String[] goodsInfo = String.valueOf(infoLoaded.get(infoLoaded.size()-1-i)).split(\"SPLITFORBUY\", 6);\r\n                favouritesUrlList.add(i, goodsInfo[0]);\r\n                favouritesImagesList.add(i, goodsInfo[1]);\r\n                favouritesNamesList.add(i, goodsInfo[2]);\r\n                if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.eldoradologo);                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.allologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.allo_colour));\r\n                }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.citruslogo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                }\r\n                favouritesPricesList.add(i, infoLoaded.get(i));\r\n                favouritesOldPricesList.add(i, infoLoadedUp.get(i));\r\n\r\n                if (Integer.parseInt(goodsInfo[5].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0) {\r\n                    if (Integer.parseInt(goodsInfo[4].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0){\r\n                        favouritesPricesList.add(i,  goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i,  goodsInfo[4]);\r\n                    } else{\r\n                        favouritesPricesList.add(i,  goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, \" \");\r\n                    }\r\n                } else {\r\n                    favouritesPricesList.add(i, context.getString(R.string.form_price));\r\n                    favouritesOldPricesList.add(i, \" \");\r\n                }\r\n\r\n            }\r\n            adapter1.notifyDataSetChanged();\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n\r\n\r\n        }else{\r\n            Toast.makeText(getActivity(),context.getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n    public void sortDown(){\r\n        if (isLoadedRozetka){\r\n            Log.d(\"TEST\", String.valueOf(infoLoaded));\r\n            boolean sorted = false;\r\n            String temp;\r\n            while(!sorted) {\r\n                sorted = true;\r\n                for (int i = 0; i < infoLoadedUp.size() - 1; i++) {\r\n\r\n                    String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                    String[] goodsInfoNext = String.valueOf(infoLoadedUp.get(i+1)).split(\"SPLITFORBUY\", 6);\r\n\r\n                    if (Integer.parseInt(goodsInfo[5].replace(\"грн\", \"\").replace(\" \", \"\")) < Integer.parseInt(goodsInfoNext[5].replace(\"грн\", \"\").replace(\" \", \"\"))) {\r\n                        temp = infoLoadedUp.get(i);\r\n                        infoLoadedUp.set(i, infoLoadedUp.get(i+1));\r\n                        infoLoadedUp.set(i+1, temp);\r\n                        sorted = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            Log.d(\"TEST\", String.valueOf(infoLoaded));\r\n\r\n            favouritesUrlList.clear();\r\n            favouritesImagesList.clear();\r\n            favouritesStoreImagesList.clear();\r\n            favouritesNamesList.clear();\r\n            favouritesPricesList.clear();\r\n            favouritesOldPricesList.clear();\r\n            favouritesColourList.clear();\r\n\r\n            for (int i = 0; i < infoLoadedUp.size(); i++) {\r\n                String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                favouritesUrlList.add(i, goodsInfo[0]);\r\n                favouritesImagesList.add(i, goodsInfo[1]);\r\n                favouritesNamesList.add(i, goodsInfo[2]);\r\n                if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.eldoradologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.allologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.allo_colour));\r\n                }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.citruslogo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                }\r\n                favouritesPricesList.add(i, infoLoadedUp.get(i));\r\n                favouritesOldPricesList.add(i, infoLoadedUp.get(i));\r\n\r\n                if (Integer.parseInt(goodsInfo[5].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0) {\r\n                    if (Integer.parseInt(goodsInfo[4].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0){\r\n                        favouritesPricesList.add(i, goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i,goodsInfo[4]);\r\n                    } else{\r\n                        favouritesPricesList.add(i,  goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, \" \");\r\n                    }\r\n                }else {\r\n                    favouritesPricesList.add(i, context.getString(R.string.form_price));\r\n                    favouritesOldPricesList.add(i, \" \");\r\n                }\r\n\r\n            }\r\n            adapter1.notifyDataSetChanged();\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n\r\n\r\n        }else{\r\n            Toast.makeText(getActivity(),context.getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void sortUp(){\r\n        if (isLoadedRozetka){\r\n            Log.d(\"BEFORE\", String.valueOf(infoLoaded));\r\n            boolean sorted = false;\r\n            String temp;\r\n            while(!sorted) {\r\n                sorted = true;\r\n                for (int i = 0; i < infoLoadedUp.size() - 1; i++) {\r\n\r\n                    String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                    String[] goodsInfoNext = String.valueOf(infoLoadedUp.get(i+1)).split(\"SPLITFORBUY\", 6);\r\n\r\n                    Log.d(\"START\", String.valueOf(goodsInfo[2])+\", \"+goodsInfoNext[2]);\r\n                    Log.d(\"FIRST\", String.valueOf(goodsInfo[4])+\", \"+goodsInfoNext[4]);\r\n                    Log.d(\"SECOND\", String.valueOf(goodsInfo[5])+\", \"+goodsInfoNext[5]);\r\n\r\n                    if (Integer.parseInt(goodsInfo[5].replace(\"грн\", \"\").replace(\" \", \"\")) > Integer.parseInt(goodsInfoNext[5].replace(\"грн\", \"\").replace(\" \", \"\"))) {\r\n                        temp = infoLoadedUp.get(i);\r\n\r\n                        infoLoadedUp.set(i, infoLoadedUp.get(i+1));\r\n\r\n                        infoLoadedUp.set(i+1, temp);\r\n                        sorted = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            favouritesUrlList.clear();\r\n            favouritesImagesList.clear();\r\n            favouritesStoreImagesList.clear();\r\n            favouritesNamesList.clear();\r\n            favouritesPricesList.clear();\r\n            favouritesOldPricesList.clear();\r\n            favouritesColourList.clear();\r\n\r\n            for (int i = 0; i < infoLoadedUp.size(); i++) {\r\n                Log.d(\"TETS\", String.valueOf(infoLoadedUp.size() + \" \" + infoLoaded.size()));\r\n                String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                favouritesUrlList.add(i, goodsInfo[0]);\r\n                favouritesImagesList.add(i, goodsInfo[1]);\r\n                favouritesNamesList.add(i, goodsInfo[2]);\r\n                if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.eldoradologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.allologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.allo_colour));\r\n                }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.citruslogo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                }\r\n                favouritesPricesList.add(i, infoLoadedUp.get(i));\r\n                favouritesOldPricesList.add(i, infoLoadedUp.get(i));\r\n\r\n                if (Integer.parseInt(goodsInfo[5].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0) {\r\n                    if (Integer.parseInt(goodsInfo[4].replace(\" \", \"\").replace(\"грн\", \"\")) != 0) {\r\n                        favouritesPricesList.add(i, goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, goodsInfo[4]);\r\n                    } else {\r\n                        favouritesPricesList.add(i, goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, \" \");\r\n                    }\r\n                } else {\r\n                    favouritesPricesList.add(i, context.getString(R.string.form_price));\r\n                    favouritesOldPricesList.add(i, \" \");\r\n                }\r\n\r\n\r\n            }\r\n            adapter1.notifyDataSetChanged();\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n\r\n\r\n        }else{\r\n            Toast.makeText(getActivity(),context.getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    class MyAdapter extends ArrayAdapter<String> {\r\n\r\n        Context context;\r\n        List<String> rTitle = new ArrayList();\r\n        List<String> rDescription = new ArrayList();\r\n        List<String> rOldDescription = new ArrayList();\r\n        List<String> rImgs = new ArrayList();\r\n        List<Integer> rStoreImgs = new ArrayList();\r\n        List<String> rUrl = new ArrayList<>();\r\n        List<Integer> backgroundColour = new ArrayList<>();\r\n\r\n        String str1 = \"\";\r\n        String str2 = \"\";\r\n\r\n        MyAdapter(Context c, List<String> title, List<String> description , List<String> oldDescription, List<String> imgs, List<Integer> storeImgs, List<String> urls, List<Integer> backgroundColor) {\r\n            super(c, R.layout.goods_view, R.id.goodsTitleMain, title);\r\n            this.context = c;\r\n            this.rTitle = title;\r\n            this.rDescription = description;\r\n            this.rOldDescription = oldDescription;\r\n            this.rImgs = imgs;\r\n            this.rStoreImgs = storeImgs;\r\n            this.rUrl = urls;\r\n            this.backgroundColour = backgroundColor;\r\n\r\n        }\r\n\r\n\r\n        @NonNull\r\n        @Override\r\n        public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n            LayoutInflater layoutInflater = (LayoutInflater) getActivity().getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n            View goodsView = layoutInflater.inflate(R.layout.goods_view, parent, false);\r\n            ImageView images = goodsView.findViewById(R.id.goodsImageMain);\r\n            ImageView storeImages = goodsView.findViewById(R.id.storeImageMain);\r\n            ImageView imageDelete = goodsView.findViewById(R.id.goodsFavourite);\r\n            // ImageView imageBackground = goodsView.findViewById(R.id.goodsBackground);\r\n            CardView backgroundCard = goodsView.findViewById(R.id.backgroungCard);\r\n            TextView myTitle = goodsView.findViewById(R.id.goodsTitleMain);\r\n            TextView myDescription = goodsView.findViewById(R.id.goodsPriceMain);\r\n            TextView myOldDescription = goodsView.findViewById(R.id.oldGoodsPriceMain);\r\n\r\n            // now set our resources on views\r\n\r\n\r\n            myDescription.setTextColor(ContextCompat.getColor(context,R.color.price_color));\r\n            myOldDescription.setTextColor(ContextCompat.getColor(context,R.color.oldprice_colour));\r\n            Glide.with(context).load(rImgs.get(position)).into(images);\r\n            storeImages.setImageResource(rStoreImgs.get(position));\r\n            backgroundCard.setCardBackgroundColor(backgroundColour.get(position));\r\n\r\n\r\n            myTitle.setText(rTitle.get(position));\r\n            try {\r\n                myDescription.setText(rDescription.get(position));\r\n                myOldDescription.setText(rOldDescription.get(position));\r\n            }  catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            imageDelete.setImageResource(R.drawable.ic_baseline_delete_24);\r\n\r\n\r\n            imageDelete.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    //imageDelete.setClickable(false);\r\n\r\n\r\n                    //------------------------------------------------------------------------------------------\r\n\r\n                    if (isLoadedRozetka){\r\n                        if (isConnected()){\r\n                            mDatabase.child(\"Users\").child(user.getUid()).addValueEventListener(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    Map<String, Object> td = (HashMap<String,Object>) snapshot.getValue();\r\n\r\n                                    for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n                                        DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child( childDataSnapshot.getKey());\r\n                                        Map<String,Object> taskMap = new HashMap<String,Object>();\r\n                                        objRef.updateChildren(taskMap);\r\n\r\n\r\n\r\n                                        try {\r\n                                            String str = favouritesNamesList.get(position).replace(\"\\nCITRUS\", \"\").replace(\"\\nALLO\", \"\").replace(\"\\nELDORADO\", \"\");\r\n\r\n                                            if (String.valueOf(childDataSnapshot.getValue()).contains(str)){\r\n\r\n\r\n                                                for (int i = 0; i < infoLoaded.size(); i++) {\r\n                                                    str1 = infoLoaded.get(i).split(\"SPLITFORBUY\", 6)[2].replace(\"CITRUS\", \"\").replace(\"ALLO\", \"\").replace(\"ELDORADO\", \"\");\r\n                                                    str2 = favouritesNamesList.get(position).replace(\"CITRUS\", \"\").replace(\"ALLO\", \"\").replace(\"ELDORADO\", \"\");\r\n\r\n                                                    Log.d(\"TEST1\", str1);\r\n\r\n                                                    if (str2.contains(str1)){\r\n\r\n                                                        Log.d(\"TEST2\", str1);\r\n\r\n                                                        infoLoaded.remove(i);\r\n\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n\r\n\r\n                                                infoLoadedUp.clear();\r\n                                                for (int i = 0; i < infoLoaded.size(); i++) {\r\n                                                    infoLoadedUp.add(i, infoLoaded.get(i));\r\n                                                }\r\n\r\n                                                try {\r\n                                                    favouritesUrlList.remove(favouritesUrlList.size()-1-position);\r\n                                                    favouritesImagesList.remove(position);\r\n                                                    favouritesNamesList.remove(position);\r\n                                                    favouritesPricesList.remove(position);\r\n                                                    //favouritesList.remove(favouritesList.size()-1-position);\r\n\r\n                                                    adapter1.notifyDataSetChanged();\r\n                                                    progressBar.setVisibility(View.GONE);\r\n\r\n                                                } catch (Exception e) {\r\n                                                    e.printStackTrace();\r\n                                                }\r\n\r\n                                                adapter1.notifyDataSetChanged();\r\n                                                progressBar.setVisibility(View.GONE);\r\n\r\n                                                mDatabase.child(\"Users\").child(user.getUid()).child(childDataSnapshot.getKey()).setValue(null);\r\n                                                mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                                                errorTextChoosen.setVisibility(View.INVISIBLE);\r\n                                                emptyTextChoosen.setVisibility(View.INVISIBLE);\r\n                                                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                                                favouritesUrlList.clear();\r\n                                                favouritesImagesList.clear();\r\n                                                favouritesStoreImagesList.clear();\r\n                                                favouritesNamesList.clear();\r\n                                                favouritesPricesList.clear();\r\n                                                favouritesOldPricesList.clear();\r\n                                                favouritesColourList.clear();\r\n\r\n                                                adapter1.notifyDataSetChanged();\r\n\r\n                                                loadChoosen();\r\n\r\n                                                break;\r\n                                            }\r\n                                        } catch (Exception e) {\r\n                                            e.printStackTrace();\r\n                                            //Toast.makeText(ChosenGoodsActivity.this, \"Загрузились не все товары, подождите\", Toast.LENGTH_SHORT).show();\r\n                                        }\r\n\r\n\r\n\r\n                                        mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n                                    }\r\n                                }\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                }\r\n                            });\r\n                        } else{\r\n                            Toast.makeText(getActivity(),context.getString(R.string.internet_error),Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    else{\r\n                        Toast.makeText(getActivity(),getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n                    }\r\n\r\n\r\n\r\n                    //------------------------------------------------------------------------------------------\r\n                }\r\n            });\r\n\r\n            return goodsView;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/goodsfinder/FavouriteFragment.java	(revision 3022c5ba5ed64e93d4a63b7f2315d1bef730cc1e)
+++ app/src/main/java/com/example/goodsfinder/FavouriteFragment.java	(date 1619527923533)
@@ -35,7 +35,6 @@
 
 import com.bumptech.glide.Glide;
 import com.firebase.ui.database.FirebaseListAdapter;
-import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
 import com.google.firebase.database.DataSnapshot;
@@ -43,11 +42,7 @@
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.ValueEventListener;
-import com.skydoves.balloon.ArrowOrientation;
 import com.skydoves.balloon.Balloon;
-import com.skydoves.balloon.BalloonAnimation;
-import com.skydoves.balloon.BalloonSizeSpec;
-import com.skydoves.balloon.OnBalloonDismissListener;
 
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
@@ -60,10 +55,7 @@
 import java.util.Map;
 
 public class FavouriteFragment extends Fragment {
-
-
-
-
+    Balloon balloon1;
     private FirebaseAuth mAuth;
     private DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference();;
     private List<String> DiscrTasks;
@@ -116,11 +108,6 @@
     ArrayList<String> favouritesUrlList = new ArrayList<>();
     ArrayList<Integer> favouritesColourList = new ArrayList<>();
 
-    Balloon balloon5;
-    Balloon balloon6;
-    Balloon balloon7;
-
-
 
 
     ArrayList<String> favouritesList = new ArrayList<>();
@@ -358,76 +345,6 @@
         adapterSpinner.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
         spinner.setAdapter(adapterSpinner);
 
-        balloon5 = new Balloon.Builder(context)
-                .setArrowSize(10)
-                .setArrowOrientation(ArrowOrientation.TOP)
-                .setArrowPosition(0.5f)
-                .setWidth(BalloonSizeSpec.WRAP)
-                .setHeight(65)
-                .setTextSize(15f)
-                .setCornerRadius(4f)
-                .setText(context.getResources().getString((R.string.balloon5)))
-                .setTextColor(ContextCompat.getColor(context, R.color.white))
-                .setTextIsHtml(true)
-                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))
-                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)
-                .setArrowAlignAnchorPadding(10)
-                .setOnBalloonDismissListener(new OnBalloonDismissListener() {
-                    @Override
-                    public void onBalloonDismiss() {
-                        balloon6.showAlignBottom(spinner);
-                    }
-                })
-                .build();
-
-        balloon6 = new Balloon.Builder(context)
-                .setArrowSize(10)
-                .setArrowOrientation(ArrowOrientation.TOP)
-                .setArrowPosition(0.5f)
-                .setWidth(BalloonSizeSpec.WRAP)
-                .setHeight(65)
-                .setTextSize(15f)
-                .setCornerRadius(4f)
-                .setText(context.getResources().getString((R.string.balloon6)))
-                .setTextColor(ContextCompat.getColor(context, R.color.white))
-                .setTextIsHtml(true)
-                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))
-                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)
-                .setArrowAlignAnchorPadding(10)
-                .setOnBalloonDismissListener(new OnBalloonDismissListener() {
-                    @Override
-                    public void onBalloonDismiss() {
-                        balloon7.showAlignBottom(view.findViewById(R.id.btn_reload));
-                    }
-                })
-                .build();
-
-        balloon7 = new Balloon.Builder(context)
-                .setArrowSize(10)
-                .setArrowOrientation(ArrowOrientation.TOP)
-                .setArrowPosition(0.5f)
-                .setWidth(BalloonSizeSpec.WRAP)
-                .setHeight(65)
-                .setTextSize(15f)
-                .setCornerRadius(4f)
-                .setText(context.getResources().getString((R.string.balloon7)))
-                .setTextColor(ContextCompat.getColor(context, R.color.white))
-                .setTextIsHtml(true)
-                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))
-                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)
-                .setArrowAlignAnchorPadding(10)
-                .setOnBalloonDismissListener(new OnBalloonDismissListener() {
-                    @Override
-                    public void onBalloonDismiss() {
-                        BottomNavigationView navigationView = ((BottomNavigationActivity)getContext()).findViewById(R.id.drawer);
-
-                        ((BottomNavigationActivity)getContext()).balloon8.showAlignRight(navigationView);
-                    }
-                })
-                .build();
-
-
-
         AdapterView.OnItemSelectedListener itemSelectedListener = new AdapterView.OnItemSelectedListener() {
             @Override
             public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
@@ -1063,6 +980,11 @@
         }
     }
 
+    public void learning1(){
+
+    }
+
+
 
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/goodsfinder/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.goodsfinder;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.annotation.StringRes;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.app.AppCompatDelegate;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.accessibilityservice.AccessibilityService;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.DialogFragment;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.net.UrlQuerySanitizer;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.StrictMode;\r\nimport android.util.Log;\r\nimport android.util.TypedValue;\r\nimport android.view.GestureDetector;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.webkit.WebChromeClient;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\nimport android.widget.Adapter;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.SearchView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.skydoves.balloon.ArrowOrientation;\r\nimport com.skydoves.balloon.Balloon;\r\nimport com.skydoves.balloon.BalloonAnimation;\r\nimport com.skydoves.balloon.BalloonSizeSpec;\r\nimport com.skydoves.balloon.OnBalloonDismissListener;\r\n\r\n\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\nimport org.jsoup.nodes.Element;\r\nimport org.jsoup.select.Elements;\r\n\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.logging.Logger;\r\n\r\n\r\n\r\n\r\npublic class HomeFragment extends Fragment{\r\n\r\n    RecyclerView recyclerView;\r\n\r\n    Balloon balloon1;\r\n    Balloon balloon2;\r\n    Balloon balloon3;\r\n\r\n\r\n    String BlockAlloClass;\r\n    String TitleAlloClass;\r\n    String UrlAlloClass;\r\n    String PriceAlloClass;\r\n    String OldPriceAlloClass;\r\n    String ImageAlloClass;\r\n    String LoadMoreAlloClass;\r\n\r\n    String BlockRozetkaClass;\r\n    String TitleRozetkaClass;\r\n    String UrlRozetkaClass;\r\n    String PriceRozetkaClass;\r\n    String OldPriceRozetkaClass;\r\n    String ImageRozetkaClass;\r\n    String LoadMoreRozetkaClass;\r\n\r\n    String BlockCitrusClass;\r\n    String TitleCitrusClass;\r\n    String UrlCitrusClass;\r\n    String PriceCitrusClass;\r\n    String OldPriceCitrusClass;\r\n    String ImageCitrusClass;\r\n    String LoadMoreCitrusClass;\r\n\r\n    DialogFragment dlg;\r\n    DialogFragment dlg2;\r\n    ListView listSearches;\r\n    public ArrayList<String> searches = new ArrayList<>();\r\n\r\n    public boolean isCatch = false;\r\n    private DatabaseReference mDatabase;\r\n    private FirebaseAuth mAuth;\r\n    FirebaseUser user = mAuth.getInstance().getCurrentUser();\r\n\r\n    public boolean isFocusedSearch = false;\r\n\r\n    private static final String TAG = \"artFil\";\r\n\r\n    private final Handler uiHandler = new Handler();\r\n    boolean isFoundMoyo = false;\r\n    boolean isFoundCitrus = false;\r\n    boolean isFoundRozetka = false;\r\n    int currentStoreIndex;\r\n    SearchView mySearchView;\r\n    ListView goodsListView;\r\n    RecyclerView storeListView;\r\n    ProgressBar progressBar;\r\n    int pageCounter = 1;\r\n    int pageCounterMoyo = 1;\r\n    int pageCounterRozerka = 1;\r\n    int goodsCount = 0;\r\n    int goodsCountMoyo = 0;\r\n    int goodsCountRozetka = 0;\r\n\r\n    boolean stopHandlers = false;\r\n\r\n    boolean isStoreLoaded = false;\r\n\r\n    public String strForSearch;\r\n\r\n    private Context context;\r\n\r\n\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        this.context = context;\r\n    }\r\n\r\n    List<Article> articleList = new ArrayList<>();\r\n    List<Article> articleListMoyo = new ArrayList<>();\r\n    List<Article> articleListRozetka = new ArrayList<>();\r\n    ArrayList<String> goodsNamesList = new ArrayList<>();\r\n    ArrayList<String> goodsPricesList = new ArrayList<>();\r\n    ArrayList<String> goodsOldPricesList = new ArrayList<>();\r\n    ArrayList<String> goodsImagesList = new ArrayList<>();\r\n    ArrayList<Integer> goodsColorsList = new ArrayList<>();\r\n\r\n    ArrayList<String> goodsImagesListMoyo = new ArrayList<>();\r\n    ArrayList<String> goodsPricesListMoyo = new ArrayList<>();\r\n    ArrayList<String> goodsOldPricesListMoyo = new ArrayList<>();\r\n    ArrayList<String> goodsNamesListMoyo = new ArrayList<>();\r\n    ArrayList<Integer> goodsColorsMoyo = new ArrayList<>();\r\n\r\n    ArrayList<String> goodsImagesListRozetka = new ArrayList<>();\r\n    ArrayList<String> goodsPricesListRozetka = new ArrayList<>();\r\n    ArrayList<String> goodsOldPricesListRozetka = new ArrayList<>();\r\n    ArrayList<String> goodsNamesListRozetka = new ArrayList<>();\r\n    ArrayList<Integer> goodsColorsRozetka = new ArrayList<>();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ArrayList<String> storeTitlesList = new ArrayList<>();\r\n    ArrayList<Integer> storeImagesList = new ArrayList<>();\r\n    ArrayList<Integer> storeColorsList = new ArrayList<>();\r\n    String currentRequestString = \"\";\r\n    TextView errorTextMain;\r\n\r\n    private Document doc = null;\r\n    private Document doc1 = null;\r\n    private Document doc2 = null;\r\n\r\n    private Thread webThread;\r\n    private Runnable runnable;\r\n    MyAdapter adapterCitrus;\r\n    MyAdapter adapterMoyo;\r\n    MyAdapter adapterRozetka;\r\n    HistoryAdapter adapterHistory;\r\n\r\n    WebView browser;\r\n    WebView browserMoyo;\r\n    WebView browserRozetka;\r\n\r\n    public boolean isLoadedCitrus = false;\r\n    public boolean isLoadedRozetka = false;\r\n    public boolean isLoadedAllo = false;\r\n\r\n    BottomNavigationView bottomNavigationView;\r\n\r\n    public int getCurrentStoreIndex() {\r\n        return currentStoreIndex;\r\n    }\r\n\r\nView view1;\r\n\r\n    SharedPreferences mSettings;\r\n    public static final String APP_PREFERENCES = \"searches\";\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_home2, container, false);\r\n        recyclerView = (RecyclerView) view.findViewById(R.id.storeListView);\r\n\r\n\r\n\r\n        balloon1 = new Balloon.Builder(context)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.3f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(context.getResources().getString((R.string.balloon1)))\r\n                .setTextColor(ContextCompat.getColor(context, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        balloon2.showAlignBottom(storeListView);\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        balloon2 = new Balloon.Builder(context)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.7f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(context.getResources().getString((R.string.balloon2)))\r\n                .setTextColor(ContextCompat.getColor(context, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n                        balloon3.showAlignTop(errorTextMain);\r\n                    }\r\n                })\r\n                .build();\r\n\r\n        mSettings = getActivity().getSharedPreferences(APP_PREFERENCES, Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = mSettings.edit();\r\n\r\n\r\n\r\n\r\n        balloon3 = new Balloon.Builder(context)\r\n                .setArrowSize(10)\r\n                .setArrowOrientation(ArrowOrientation.TOP)\r\n                .setArrowPosition(0.5f)\r\n                .setWidth(BalloonSizeSpec.WRAP)\r\n                .setHeight(65)\r\n                .setTextSize(15f)\r\n                .setCornerRadius(4f)\r\n                .setText(context.getResources().getString((R.string.balloon3)))\r\n                .setTextColor(ContextCompat.getColor(context, R.color.white))\r\n                .setTextIsHtml(true)\r\n                .setBackgroundColor(ContextCompat.getColor(context, R.color.bg_learn))\r\n                .setBalloonAnimation(BalloonAnimation.OVERSHOOT)\r\n                .setArrowAlignAnchorPadding(10)\r\n                .setOnBalloonDismissListener(new OnBalloonDismissListener() {\r\n                    @Override\r\n                    public void onBalloonDismiss() {\r\n\r\n                        BottomNavigationView navigationView = ((BottomNavigationActivity)getContext()).findViewById(R.id.nav_view);\r\n\r\n                        ((BottomNavigationActivity)getContext()).balloon4.showAlignTop(navigationView);\r\n\r\n\r\n\r\n                    }\r\n                })\r\n                .build();\r\n\r\n\r\n\r\n\r\n\r\n\r\n        dlg = new Dialog();\r\n        dlg2 = new Dialog2();\r\n/*        editor.clear();\r\n        editor.apply();*/\r\n\r\n        if (mSettings.getString(\"theme\", \"\").equals(\"\")) {\r\n            editor.putString(\"theme\", \"light\");\r\n            editor.apply();\r\n            editor.commit();\r\n        } else if (mSettings.getString(\"theme\", \"\").equals(\"dark\")) {\r\n            AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);\r\n        } else if (mSettings.getString(\"theme\", \"\").equals(\"light\")) {\r\n            AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO);\r\n        }\r\n\r\n\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n        mDatabase.child(\"Class\").child(\"PageProduct\").child(\"Allo\").addValueEventListener(new ValueEventListener() {\r\n            public boolean inChosen;\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                Map<String, Object> td = (HashMap<String,Object>) snapshot.getValue();\r\n                Log.d(\"DATA\", \"DATA1\");\r\n\r\n                for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n\r\n                    DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child( childDataSnapshot.getKey());\r\n                    Map<String,Object> taskMap = new HashMap<String,Object>();\r\n                    objRef.updateChildren(taskMap);\r\n\r\n                    String tmp = String.valueOf(childDataSnapshot.getValue());\r\n                    String tmp2 = String.valueOf(childDataSnapshot.getKey());\r\n                    if (tmp2.equals(\"Block\")){\r\n                        BlockAlloClass = tmp;\r\n                    } else if (tmp2.equals(\"Title\")){\r\n                        TitleAlloClass = tmp;\r\n                    } else if (tmp2.equals(\"Url\")){\r\n                        UrlAlloClass = tmp;\r\n                    } else if (tmp2.equals(\"OldPrice\")){\r\n                        OldPriceAlloClass = tmp;\r\n                    } else if (tmp2.equals(\"Image\")){\r\n                        ImageAlloClass = tmp;\r\n                    } else if (tmp2.equals(\"LoadMore\")){\r\n                        LoadMoreAlloClass = tmp;\r\n                    } else if (tmp2.equals(\"Price\")){\r\n                        PriceAlloClass = tmp;\r\n                    }\r\n                }\r\n                Log.d(\"DATA\", BlockAlloClass);\r\n                Log.d(\"DATA\", TitleAlloClass);\r\n                Log.d(\"DATA\", UrlAlloClass);\r\n                Log.d(\"DATA\", OldPriceAlloClass);\r\n                Log.d(\"DATA\", ImageAlloClass);\r\n                Log.d(\"DATA\", LoadMoreAlloClass);\r\n                Log.d(\"DATA\", PriceAlloClass);\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        mDatabase.child(\"Class\").child(\"PageProduct\").child(\"Citrus\").addValueEventListener(new ValueEventListener() {\r\n            public boolean inChosen;\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                Map<String, Object> td = (HashMap<String,Object>) snapshot.getValue();\r\n                Log.d(\"DATA\", \"DATA2\");\r\n\r\n                for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n\r\n                    DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child( childDataSnapshot.getKey());\r\n                    Map<String,Object> taskMap = new HashMap<String,Object>();\r\n                    objRef.updateChildren(taskMap);\r\n\r\n                    String tmp = String.valueOf(childDataSnapshot.getValue());\r\n                    String tmp2 = String.valueOf(childDataSnapshot.getKey());\r\n                    if (tmp2.equals(\"Block\")){\r\n                        BlockCitrusClass = tmp;\r\n                    } else if (tmp2.equals(\"Title\")){\r\n                        TitleCitrusClass = tmp;\r\n                    } else if (tmp2.equals(\"Url\")){\r\n                        UrlCitrusClass = tmp;\r\n                    } else if (tmp2.equals(\"OldPrice\")){\r\n                        OldPriceCitrusClass = tmp;\r\n                    } else if (tmp2.equals(\"Image\")){\r\n                        ImageCitrusClass = tmp;\r\n                    } else if (tmp2.equals(\"LoadMore\")){\r\n                        LoadMoreCitrusClass = tmp;\r\n                    } else if (tmp2.equals(\"Price\")){\r\n                        PriceCitrusClass = tmp;\r\n                    }\r\n                }\r\n                Log.d(\"DATA\", BlockCitrusClass);\r\n                Log.d(\"DATA\", TitleCitrusClass);\r\n                Log.d(\"DATA\", UrlCitrusClass);\r\n                Log.d(\"DATA\", OldPriceCitrusClass);\r\n                Log.d(\"DATA\", ImageCitrusClass);\r\n                Log.d(\"DATA\", LoadMoreCitrusClass);\r\n                Log.d(\"DATA\", PriceCitrusClass);\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        mDatabase.child(\"Class\").child(\"PageProduct\").child(\"Rozetka\").addValueEventListener(new ValueEventListener() {\r\n            public boolean inChosen;\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                Map<String, Object> td = (HashMap<String,Object>) snapshot.getValue();\r\n                Log.d(\"DATA\", \"DATA3\");\r\n\r\n                for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n\r\n                    DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child( childDataSnapshot.getKey());\r\n                    Map<String,Object> taskMap = new HashMap<String,Object>();\r\n                    objRef.updateChildren(taskMap);\r\n\r\n                    String tmp = String.valueOf(childDataSnapshot.getValue());\r\n                    String tmp2 = String.valueOf(childDataSnapshot.getKey());\r\n                    if (tmp2.equals(\"Block\")){\r\n                        BlockRozetkaClass = tmp;\r\n                    } else if (tmp2.equals(\"Title\")){\r\n                        TitleRozetkaClass = tmp;\r\n                    } else if (tmp2.equals(\"Url\")){\r\n                        UrlRozetkaClass = tmp;\r\n                    } else if (tmp2.equals(\"OldPrice\")){\r\n                        OldPriceRozetkaClass = tmp;\r\n                    } else if (tmp2.equals(\"Image\")){\r\n                        ImageRozetkaClass = tmp;\r\n                    } else if (tmp2.equals(\"LoadMore\")){\r\n                        LoadMoreRozetkaClass = tmp;\r\n                    } else if (tmp2.equals(\"Price\")){\r\n                        PriceRozetkaClass = tmp;\r\n                    }\r\n                }\r\n                Log.d(\"DATA\", BlockRozetkaClass);\r\n                Log.d(\"DATA\", TitleRozetkaClass);\r\n                Log.d(\"DATA\", UrlRozetkaClass);\r\n                Log.d(\"DATA\", OldPriceRozetkaClass);\r\n                Log.d(\"DATA\", ImageRozetkaClass);\r\n                Log.d(\"DATA\", LoadMoreRozetkaClass);\r\n                Log.d(\"DATA\", PriceRozetkaClass);\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        isFoundMoyo = false;\r\n        isFoundCitrus = false;\r\n        isFoundRozetka = false;\r\n        browser = new WebView(getContext());\r\n        browserMoyo = new WebView(getContext());\r\n        browserRozetka = new WebView(getContext());\r\n        currentStoreIndex = -1;\r\n\r\n        //setContentView(R.layout.activity_main);\r\n        initRecyclerView();\r\n\r\n\r\n        listSearches = view.findViewById(R.id.searchHistory);\r\n        listSearches.setVisibility(View.INVISIBLE);\r\n\r\n        for (int i = 4; i >= 1; i--) {\r\n            Log.d(\"SHAR\", mSettings.getString(String.valueOf(i), \"\"));\r\n            if (!mSettings.getString(String.valueOf(i), \"\").equals(\"\")) {\r\n                searches.add(mSettings.getString(String.valueOf(i), \"\"));\r\n            }\r\n        }\r\n\r\n        adapterHistory = new HistoryAdapter(getContext(), searches);\r\n\r\n        listSearches.setAdapter(adapterHistory);\r\n\r\n\r\n        listSearches.setOnItemClickListener(new AdapterView.OnItemClickListener()  {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view,int position, long id) {\r\n\r\n                String recentSearchString = searches.get(position);\r\n                Log.d(\"TEST1\", \"onItemClick: \");\r\n                mySearchView.setQuery(recentSearchString, false);\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        errorTextMain = view.findViewById(R.id.errorTextMain);\r\n        errorTextMain.setVisibility(View.INVISIBLE);\r\n        mySearchView = (SearchView) view.findViewById(R.id.goodsSearchView);\r\n        goodsListView = (ListView) view.findViewById(R.id.goodsList);\r\n        storeListView = (RecyclerView) view.findViewById(R.id.storeListView);\r\n        progressBar = view.findViewById(R.id.progressBar);\r\n        adapterCitrus = new MyAdapter(getContext(), goodsNamesList, goodsPricesList, goodsOldPricesList, goodsImagesList, goodsColorsList, articleList);\r\n        adapterMoyo = new MyAdapter(getContext(), goodsNamesListMoyo, goodsPricesListMoyo, goodsOldPricesListMoyo, goodsImagesListMoyo, goodsColorsMoyo, articleListMoyo);\r\n        adapterRozetka = new MyAdapter(getContext(), goodsNamesListRozetka, goodsPricesListRozetka, goodsOldPricesListRozetka, goodsImagesListRozetka, goodsColorsRozetka, articleListRozetka);\r\n        goodsListView.setAdapter(adapterMoyo);\r\n\r\n        progressBar.setVisibility(View.GONE); // to hide\r\n\r\n        getMoyo();\r\n        getRozetka();\r\n\r\n        storeTitlesList.add(\"Eldorado\");\r\n        storeTitlesList.add(\"Citrus\");\r\n        storeTitlesList.add(\"Allo\");\r\n\r\n\r\n        storeImagesList.add(R.drawable.eldoradologo);\r\n        storeImagesList.add(R.drawable.citruslogo);\r\n        storeImagesList.add(R.drawable.allologo);\r\n\r\n        storeColorsList.add(ContextCompat.getColor(context, R.color.rozetka_colour));\r\n        storeColorsList.add(ContextCompat.getColor(context, R.color.citrus_colour));\r\n        storeColorsList.add(ContextCompat.getColor(context, R.color.allo_colour));\r\n        Log.d(\"THEME\", String.valueOf(articleList.size()) + \"- -\");\r\n\r\n\r\n        for (int i = goodsCount; i < articleList.size(); i++) {\r\n            goodsNamesList.add(articleList.get(i).getName());\r\n            goodsPricesList.add(articleList.get(i).getPrice());\r\n            goodsOldPricesList.add(articleList.get(i).getOldPrice());\r\n            goodsColorsList.add(ContextCompat.getColor(context, R.color.citrus_colour));\r\n\r\n            goodsImagesList.add(articleList.get(i).getImg());\r\n\r\n        }\r\n        goodsCount = articleList.size();\r\n\r\n        adapterCitrus.notifyDataSetChanged();\r\n        goodsListView.setEnabled(true);\r\n\r\n        balloon1.showAlignBottom(mySearchView);\r\n\r\n\r\n        storeListView.addOnItemTouchListener(\r\n                new RecyclerItemClickListener(getContext(), storeListView, new RecyclerItemClickListener.OnItemClickListener() {\r\n                    @Override\r\n                    public void onItemClick(View view, int position) {\r\n                        if (isStoreLoaded) {\r\n                            if (position == 0) {\r\n\r\n                                currentStoreIndex = 0;\r\n                                goodsListView.setAdapter(adapterMoyo);\r\n                                Log.d(\"TEST\", \"Rozetka =>\" + isLoadedRozetka);\r\n                                if (isLoadedRozetka) {\r\n                                    progressBar.setVisibility(View.GONE);\r\n\r\n                                } else {\r\n                                    progressBar.setVisibility(View.VISIBLE); // to hide\r\n                                }\r\n\r\n                            } else if (position == 1) {\r\n\r\n                                currentStoreIndex = 1;\r\n                                goodsListView.setAdapter(adapterCitrus);\r\n                                Log.d(\"TEST\", \"Citrus =>\" + isLoadedCitrus);\r\n                                if (isLoadedCitrus) {\r\n                                    progressBar.setVisibility(View.GONE);\r\n\r\n                                } else {\r\n                                    progressBar.setVisibility(View.VISIBLE); // to hide\r\n                                }\r\n\r\n                            } else if (position == 2) {\r\n\r\n                                currentStoreIndex = 2;\r\n                                goodsListView.setAdapter(adapterRozetka);\r\n                                Log.d(\"TEST\", \"Allo =>\" + isLoadedAllo);\r\n                                if (isLoadedAllo) {\r\n                                    progressBar.setVisibility(View.GONE);\r\n\r\n                                } else {\r\n                                    progressBar.setVisibility(View.VISIBLE); // to hide\r\n                                }\r\n                            }\r\n                            initRecyclerView();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onLongItemClick(View view, int position) {\r\n                        // do whatever\r\n                    }\r\n                })\r\n        );\r\n\r\n\r\n        goodsListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if (currentStoreIndex == 1) {\r\n                    Element loadElement = doc.getElementsByAttributeValue(\"class\", \"catalog-card-container more-items product-card product-card--mini\").first();\r\n\r\n                    if (loadElement == null ^ i != articleList.size() - 1) {\r\n\r\n                        Uri address = Uri.parse(articleList.get(i).getUrl());\r\n                        Intent openlinkIntent = new Intent(Intent.ACTION_VIEW, address);\r\n                        startActivity(openlinkIntent);\r\n                    } else {\r\n\r\n                        if (isConnected()) {\r\n\r\n                            articleList.remove(articleList.size() - 1);\r\n                            goodsPricesList.remove(goodsPricesList.size() - 1);\r\n                            goodsOldPricesList.remove(goodsOldPricesList.size() - 1);\r\n                            goodsNamesList.remove(goodsNamesList.size() - 1);\r\n                            goodsImagesList.remove(goodsImagesList.size() - 1);\r\n                            goodsColorsList.remove(goodsColorsList.size() - 1);\r\n                            pageCounter++;\r\n                            getCitrus(currentRequestString + \"&page=\" + pageCounter);\r\n\r\n\r\n                        } else {\r\n\r\n                            errorTextMain.setVisibility(View.VISIBLE);\r\n                            goodsNamesList.clear();\r\n                            goodsImagesList.clear();\r\n                            goodsPricesList.clear();\r\n                            goodsOldPricesList.clear();\r\n                            goodsNamesListMoyo.clear();\r\n                            goodsNamesListRozetka.clear();\r\n                            goodsImagesListMoyo.clear();\r\n                            goodsImagesListRozetka.clear();\r\n                            goodsPricesListMoyo.clear();\r\n                            goodsPricesListRozetka.clear();\r\n                            goodsColorsList.clear();\r\n                            goodsColorsMoyo.clear();\r\n                            goodsColorsRozetka.clear();\r\n                            goodsOldPricesListMoyo.clear();\r\n                            goodsOldPricesListRozetka.clear();\r\n                            articleList.clear();\r\n                            articleListMoyo.clear();\r\n                            articleListRozetka.clear();\r\n                            adapterCitrus.notifyDataSetChanged();\r\n                            adapterMoyo.notifyDataSetChanged();\r\n                            adapterRozetka.notifyDataSetChanged();\r\n                            currentRequestString = \"\";\r\n                            pageCounter = 1;\r\n                            pageCounterMoyo = 1;\r\n                            pageCounterRozerka = 1;\r\n                            goodsCount = 0;\r\n                            goodsCountMoyo = 0;\r\n                            goodsCountRozetka = 0;\r\n                        }\r\n                    }\r\n                } else if (currentStoreIndex == 0) {\r\n                   // Element loadElement = doc1.getElementsByAttributeValue(\"class\", \"show-more__text\").first();\r\n\r\n\r\n                    if (i != articleListMoyo.size() - 1) {\r\n                        //Log.d(TAG, articleListMoyo.size() - 1 + \"------\" + i);\r\n                        Log.d(\"TEST\",\"goodclicked\");\r\n                        Uri address = Uri.parse(articleListMoyo.get(i).getUrl());\r\n                        Intent openlinkIntent = new Intent(Intent.ACTION_VIEW, address);\r\n                        startActivity(openlinkIntent);\r\n                    } else {\r\n\r\n                        if (isConnected()) {\r\n                            articleListMoyo.remove(articleListMoyo.size() - 1);\r\n                            goodsPricesListMoyo.remove(goodsPricesListMoyo.size() - 1);\r\n                            goodsOldPricesListMoyo.remove(goodsOldPricesListMoyo.size() - 1);\r\n                            goodsNamesListMoyo.remove(goodsNamesListMoyo.size() - 1);\r\n                            goodsImagesListMoyo.remove(goodsImagesListMoyo.size() - 1);\r\n                            goodsColorsMoyo.remove(goodsColorsMoyo.size() - 1);\r\n                            pageCounterMoyo++;\r\n\r\n                            getMoyoGoods(\"https://eldorado.ua/search/?q=\"+currentRequestString);\r\n                            Log.d(\"TEST\",\"loadCLicked\");\r\n\r\n\r\n\r\n                        } else {\r\n\r\n                            errorTextMain.setVisibility(View.VISIBLE);\r\n                            goodsNamesList.clear();\r\n                            goodsImagesList.clear();\r\n                            goodsPricesList.clear();\r\n                            goodsOldPricesList.clear();\r\n                            goodsNamesListMoyo.clear();\r\n                            goodsNamesListRozetka.clear();\r\n                            goodsImagesListMoyo.clear();\r\n                            goodsImagesListRozetka.clear();\r\n                            goodsPricesListMoyo.clear();\r\n                            goodsPricesListRozetka.clear();\r\n                            goodsColorsList.clear();\r\n                            goodsColorsMoyo.clear();\r\n                            goodsColorsRozetka.clear();\r\n                            goodsOldPricesListMoyo.clear();\r\n                            goodsOldPricesListRozetka.clear();\r\n                            articleList.clear();\r\n                            articleListMoyo.clear();\r\n                            articleListRozetka.clear();\r\n                            adapterCitrus.notifyDataSetChanged();\r\n                            adapterMoyo.notifyDataSetChanged();\r\n                            adapterRozetka.notifyDataSetChanged();\r\n                            currentRequestString = \"\";\r\n                            pageCounter = 1;\r\n                            pageCounterMoyo = 1;\r\n                            pageCounterRozerka = 1;\r\n                            goodsCount = 0;\r\n                            goodsCountMoyo = 0;\r\n                            goodsCountRozetka = 0;\r\n                        }\r\n                    }\r\n                }else if (currentStoreIndex == 2) {\r\n                    Element loadElement = doc2.getElementsByAttributeValue(\"class\", \"pagination__next__link\").first();\r\n\r\n                    if (loadElement == null ^ i != articleListRozetka.size() - 1) {\r\n                        //Log.d(TAG, articleListRozetka.size() - 1 + \"------\" + i);\r\n                        Uri address = Uri.parse(articleListRozetka.get(i).getUrl());\r\n                        Intent openlinkIntent = new Intent(Intent.ACTION_VIEW, address);\r\n                        startActivity(openlinkIntent);\r\n                    } else {\r\n\r\n                        if (isConnected()) {\r\n                            articleListRozetka.remove(articleListRozetka.size() - 1);\r\n                            goodsPricesListRozetka.remove(goodsPricesListRozetka.size() - 1);\r\n                            goodsOldPricesListRozetka.remove(goodsOldPricesListRozetka.size() - 1);\r\n                            goodsNamesListRozetka.remove(goodsNamesListRozetka.size() - 1);\r\n                            goodsImagesListRozetka.remove(goodsImagesListRozetka.size() - 1);\r\n                            goodsColorsRozetka.remove(goodsColorsRozetka.size() - 1);\r\n                            pageCounterRozerka++;\r\n\r\n                            getRozetkaGoods(\"https://allo.ua/ru/catalogsearch/result/index/p-\"+pageCounterRozerka+\"/?q=\"+currentRequestString.replace(\"%20\", \"+\").replace(\"айфон\",\"iphone\"));\r\n\r\n\r\n\r\n                        } else {\r\n\r\n                            errorTextMain.setVisibility(View.VISIBLE);\r\n                            goodsNamesList.clear();\r\n                            goodsImagesList.clear();\r\n                            goodsPricesList.clear();\r\n                            goodsOldPricesList.clear();\r\n                            goodsNamesListMoyo.clear();\r\n                            goodsNamesListRozetka.clear();\r\n                            goodsImagesListMoyo.clear();\r\n                            goodsImagesListRozetka.clear();\r\n                            goodsPricesListMoyo.clear();\r\n                            goodsPricesListRozetka.clear();\r\n                            goodsColorsList.clear();\r\n                            goodsColorsMoyo.clear();\r\n                            goodsColorsRozetka.clear();\r\n                            goodsOldPricesListMoyo.clear();\r\n                            goodsOldPricesListRozetka.clear();\r\n                            articleList.clear();\r\n                            articleListMoyo.clear();\r\n                            articleListRozetka.clear();\r\n                            adapterCitrus.notifyDataSetChanged();\r\n                            adapterMoyo.notifyDataSetChanged();\r\n                            adapterRozetka.notifyDataSetChanged();\r\n                            currentRequestString = \"\";\r\n                            pageCounter = 1;\r\n                            pageCounterMoyo = 1;\r\n                            pageCounterRozerka = 1;\r\n                            goodsCount = 0;\r\n                            goodsCountMoyo = 0;\r\n                            goodsCountRozetka = 0;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n        mySearchView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                mySearchView.setIconified(false);\r\n\r\n                Log.d(\"FOCUS\", \"CLICK\");\r\n            }\r\n        });\r\n\r\n\r\n        mySearchView.setOnQueryTextFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(final View view, boolean hasFocus) {\r\n                if (hasFocus) {\r\n                    searches.clear();\r\n                    for (int i = 4; i >= 1; i--) {\r\n                        Log.d(\"SHAR\", mSettings.getString(String.valueOf(i), \"\"));\r\n                        if (!mSettings.getString(String.valueOf(i), \"\").equals(\"\")) {\r\n                            searches.add(mSettings.getString(String.valueOf(i), \"\"));\r\n                        }\r\n                    }\r\n\r\n                    adapterHistory.notifyDataSetChanged();\r\n\r\n                    Log.d(\"FOCUS\", \"FOCUSED\");\r\n\r\n                    listSearches.setVisibility(View.VISIBLE);\r\n                    isFocusedSearch = false;\r\n\r\n                } else {\r\n\r\n                    Log.d(\"FOCUS\", \"UNFOCUSED\");\r\n                    listSearches.setVisibility(View.INVISIBLE);\r\n                    isFocusedSearch = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        // WORKS, DON'T CHANGE!!!\r\n\r\n        mySearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String s) {\r\n                stopHandlers = false;\r\n                listSearches.setVisibility(View.INVISIBLE);\r\n                currentStoreIndex = -1;\r\n                progressBar.setVisibility(View.VISIBLE); // to hide\r\n                isStoreLoaded = false;\r\n                currentRequestString = \"\";\r\n                pageCounterMoyo = 1;\r\n                pageCounter = 1;\r\n                pageCounterRozerka = 1;\r\n                goodsCountMoyo = 0;\r\n                goodsCount = 0;\r\n                goodsCountRozetka = 0;\r\n                goodsNamesList.clear();\r\n                goodsImagesList.clear();\r\n                goodsPricesList.clear();\r\n                goodsOldPricesList.clear();\r\n                goodsNamesListMoyo.clear();\r\n                goodsImagesListMoyo.clear();\r\n                goodsPricesListMoyo.clear();\r\n                goodsOldPricesListMoyo.clear();\r\n                goodsNamesListRozetka.clear();\r\n                goodsImagesListRozetka.clear();\r\n                goodsPricesListRozetka.clear();\r\n                goodsOldPricesListRozetka.clear();\r\n                goodsColorsList.clear();\r\n                goodsColorsMoyo.clear();\r\n                goodsColorsRozetka.clear();\r\n                articleList.clear();\r\n                articleListMoyo.clear();\r\n                articleListRozetka.clear();\r\n                if (isConnected()) {\r\n                    errorTextMain.setVisibility(View.INVISIBLE);\r\n                    currentRequestString = s;\r\n                    adapterCitrus.notifyDataSetChanged();\r\n                    adapterMoyo.notifyDataSetChanged();\r\n                    adapterRozetka.notifyDataSetChanged();\r\n\r\n\r\n\r\n                    getCitrus(s);\r\n                    getMoyoGoods(s);\r\n                    getRozetkaGoods(\"https://allo.ua/ru/catalogsearch/result/?q=\"+s.replace(\"айфон\", \"iphone\"));\r\n\r\n                    boolean isPut = false;\r\n\r\n                    for (int i = 1; i <= 4; i++) {\r\n                        if (mSettings.getString(String.valueOf(i), \"\").equals(\"\") && s.equals(mSettings.getString(String.valueOf(i-1), \"\"))){\r\n                            Log.d(\"SHAR1\", mSettings.getString(String.valueOf(i-1), \"\")+\" --- \"+ s);\r\n                            editor.putString(String.valueOf(i), s);\r\n                            isPut = true;\r\n                            editor.apply();\r\n                            editor.commit();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    String tmp = mSettings.getString(\"4\", \"\");\r\n\r\n                    if (!isPut && !(s.equals(mSettings.getString(\"4\", \"\")))){\r\n\r\n                        editor.putString(\"4\", s);\r\n                        editor.apply();\r\n                        editor.commit();\r\n\r\n                        for (int i = 3; i >=1; i--) {\r\n                            editor.putString(String.valueOf(i), tmp);\r\n                            tmp = mSettings.getString(String.valueOf(i), \"\");\r\n\r\n                            editor.apply();\r\n                            editor.commit();\r\n                        }\r\n\r\n                    }\r\n\r\n                    for (int i = 4; i >= 1; i--) {\r\n                        Log.d(\"SHAR\", mSettings.getString(String.valueOf(i), \"\"));\r\n                    }\r\n\r\n                } else {\r\n                    errorTextMain.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String s) {\r\n\r\n                return false;\r\n            }\r\n\r\n        });\r\n\r\n        mySearchView.setOnCloseListener(new SearchView.OnCloseListener() {\r\n            @Override\r\n            public boolean onClose() {\r\n                stopHandlers = true;\r\n                goodsNamesList.clear();\r\n                goodsImagesList.clear();\r\n                goodsPricesList.clear();\r\n                goodsOldPricesList.clear();\r\n                goodsNamesListMoyo.clear();\r\n                goodsImagesListMoyo.clear();\r\n                goodsPricesListMoyo.clear();\r\n                goodsOldPricesListMoyo.clear();\r\n                goodsNamesListRozetka.clear();\r\n                goodsImagesListRozetka.clear();\r\n                goodsPricesListRozetka.clear();\r\n                goodsOldPricesListRozetka.clear();\r\n                goodsColorsList.clear();\r\n                goodsColorsMoyo.clear();\r\n                goodsColorsRozetka.clear();\r\n                articleList.clear();\r\n                articleListMoyo.clear();\r\n                articleListRozetka.clear();\r\n                adapterCitrus.notifyDataSetChanged();\r\n                adapterMoyo.notifyDataSetChanged();\r\n                adapterRozetka.notifyDataSetChanged();\r\n                currentRequestString = \"\";\r\n                pageCounter = 1;\r\n                pageCounterMoyo = 1;\r\n                pageCounterRozerka = 1;\r\n                goodsCount = 0;\r\n                goodsCountRozetka = 0;\r\n                return false;\r\n            }\r\n        });\r\n\r\n    return view;\r\n\r\n    }\r\n\r\n\r\n\r\n    private void initRecyclerView() {\r\n        //Log.d(TAG, \"initRecyclerView: init recyclerview\");\r\n        if (getActivity() != null) {\r\n            getActivity().runOnUiThread(new Runnable() {\r\n\r\n                @Override\r\n                public void run() {\r\n\r\n                    LinearLayoutManager layoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);\r\n                    recyclerView.setLayoutManager(layoutManager);\r\n                    RecyclerViewAdapter adapter = new RecyclerViewAdapter(getContext(), storeTitlesList, storeImagesList, storeColorsList);\r\n                    recyclerView.setAdapter(adapter);\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    boolean isConnected() {\r\n        boolean connected = false;\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            connected = true;\r\n        } else\r\n            connected = false;\r\n\r\n        return connected;\r\n    }\r\n\r\n\r\n\r\n\r\n    void getCitrus(String s){\r\n        errorTextMain.setVisibility(View.INVISIBLE);\r\n\r\n        runnable = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n\r\n\r\n                    try {\r\n                        doc = Jsoup.connect(\"https://www.citrus.ua/search?query=\" + s.replace(\" \", \"%20\")).get();\r\n                        Log.d(\"TEXT\", doc.getElementsByAttributeValue(\"class\", \"product-img\").attr(\"src\"));\r\n                        Log.d(\"CONNECT\", \"connected main Citrus\");\r\n                        Elements elements = doc.getElementsByAttributeValue(\"class\", BlockCitrusClass);\r\n\r\n                        elements.forEach(image -> {\r\n                            if (!stopHandlers) {\r\n\r\n                                try {\r\n\r\n                                    Element aElement = image.getElementsByAttributeValue(\"class\", UrlCitrusClass).last();\r\n                                    Element priceElement2 = image.getElementsByAttributeValue(\"class\", OldPriceCitrusClass).last();\r\n                                    Element priceElement = image.getElementsByAttributeValue(\"class\", PriceCitrusClass).last();\r\n                                    String url = \"https://www.citrus.ua\" + aElement.attr(\"href\");\r\n                                    String title = image.getElementsByAttributeValue(\"class\", TitleCitrusClass).last().text();\r\n                                    String price = \"\";\r\n                                    String oldPrice = \"\";\r\n\r\n                                    if (priceElement != null) {\r\n                                        String price1 = priceElement.text().replace(\"₴\", \"\").replace(\" грн\", \"\").replace(\"грн\", \"\") + \" грн\";\r\n\r\n                                        if (priceElement2 != null) {\r\n                                            String price2 = priceElement2.text().replace(\"₴\", \"\").replace(\" грн\", \"\").replace(\"грн\", \"\") + \" грн\";\r\n                                            price = price1;\r\n                                            oldPrice = price2;\r\n                                        } else {\r\n                                            price = price1;\r\n                                            oldPrice = \"\";\r\n                                        }\r\n\r\n                                    } else {\r\n                                        price = getString(R.string.form_price);\r\n                                        oldPrice = \"\";\r\n                                    }\r\n\r\n                                    Document docCitrus = null;\r\n                                    try {\r\n                                        docCitrus = Jsoup.connect(url).timeout(0).get();\r\n                                        Log.d(\"CONNECT\", \"connected next try\" + stopHandlers);\r\n\r\n                                        Elements images = docCitrus.getElementsByAttributeValue(\"class\", ImageCitrusClass).select(\"img\");\r\n                                        String img = images.attr(\"src\");\r\n\r\n                                        articleList.add(new Article(url, title, price, oldPrice, img));\r\n                                        if (currentStoreIndex == 1) {\r\n                                            errorTextMain.setVisibility(View.INVISIBLE);\r\n                                        }\r\n                                    } catch (IOException e) {\r\n                                        e.printStackTrace();\r\n                                        Log.d(\"CONNECT\", \"connected next except\");\r\n\r\n                                    }\r\n                                }\r\n                                catch (Exception e) {\r\n                                    e.printStackTrace();\r\n                                    Log.d(TAG, \"Rozetka Error\");\r\n                                    return;\r\n                                }\r\n                            } else {\r\n                                return;\r\n                            }\r\n                        });\r\n\r\n                        isLoadedCitrus = true;\r\n\r\n\r\n                        for (int i = goodsCount; i < articleList.size(); i++) {\r\n                            goodsNamesList.add(articleList.get(i).getName());\r\n                            goodsPricesList.add(articleList.get(i).getPrice());\r\n                            goodsOldPricesList.add(articleList.get(i).getOldPrice());\r\n                            goodsColorsList.add(ContextCompat.getColor(context, R.color.citrus_colour));\r\n\r\n                            goodsImagesList.add(articleList.get(i).getImg());\r\n\r\n                        }\r\n                        goodsCount = articleList.size();\r\n                        Element loadElement = doc.getElementsByAttributeValue(\"class\", LoadMoreCitrusClass).first();\r\n\r\n                        if (loadElement != null && goodsCount > 0 && !stopHandlers) {\r\n                            goodsNamesList.add(getString(R.string.load_more));\r\n                            goodsPricesList.add(\"\");\r\n                            goodsOldPricesList.add(\"\");\r\n                            goodsColorsList.add(ContextCompat.getColor(context, R.color.loadmore_colour));\r\n\r\n                            goodsImagesList.add(\"https://image.flaticon.com/icons/png/512/16/16770.png\");\r\n                            articleList.add(new Article(\" \", getString(R.string.load_more), \"\", \"\", \"https://image.flaticon.com/icons/png/512/16/16770.png\"));\r\n\r\n                        }\r\n                        if (articleList.size() > 0) {\r\n                            Log.d(\"TEST\", \"Citrus =>\" + isLoadedCitrus);\r\n\r\n                            if (!isStoreLoaded) {\r\n\r\n                                currentStoreIndex = 1;\r\n                                if (getActivity() != null) {\r\n                                    getActivity().runOnUiThread(new Runnable() {\r\n\r\n                                        @Override\r\n                                        public void run() {\r\n\r\n                                            goodsListView.setAdapter(adapterCitrus);\r\n                                            initRecyclerView();\r\n                                            progressBar.setVisibility(View.GONE); // to hide\r\n\r\n                                        }\r\n\r\n                                    });\r\n                                }\r\n                                isStoreLoaded = true;\r\n\r\n                            }\r\n                        }\r\n                        if (getActivity() != null) {\r\n                            getActivity().runOnUiThread(new Runnable() {\r\n\r\n                                @Override\r\n                                public void run() {\r\n                                    // to hide\r\n                                    adapterCitrus.notifyDataSetChanged();\r\n                                    goodsListView.setEnabled(true);\r\n\r\n                                    if (!isConnected()) {\r\n                                        errorTextMain.setVisibility(View.VISIBLE);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                        Log.d(TAG, \"CITRUS ERROR\");\r\n                    }\r\n\r\n\r\n                }\r\n        };\r\n\r\n\r\n        webThread = new Thread(runnable);\r\n        webThread.start();\r\n\r\n    }\r\n\r\n\r\n\r\n    void getMoyoGoods(String search) {\r\n\r\n\r\n        goodsListView.setEnabled(false);\r\n        //isFoundMoyo = false;\r\n        uiHandler.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                String search1 = \"\";\r\n                search1 = search.replace(\" \", \"+\");\r\n\r\n                    browserMoyo.loadUrl(\"https://eldorado.ua/search/?q=\"+search1);\r\n\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @SuppressLint(\"SetJavaScriptEnabled\")\r\n    void getMoyo() {\r\n        try {\r\n//            isFoundMoyo = false;\r\n\r\n            browserMoyo.setVisibility(View.INVISIBLE);\r\n            browserMoyo.setLayerType(View.LAYER_TYPE_NONE, null);\r\n            browserMoyo.getSettings().setJavaScriptEnabled(true);\r\n            browserMoyo.getSettings().setBlockNetworkImage(false);\r\n            browserMoyo.getSettings().setDomStorageEnabled(true);\r\n            browserMoyo.getSettings().setLoadsImagesAutomatically(true);\r\n            browserMoyo.getSettings().setBlockNetworkLoads(false);\r\n            browserMoyo.getSettings().setJavaScriptCanOpenWindowsAutomatically(true);\r\n            browserMoyo.getSettings().setDefaultTextEncodingName(\"utf-8\");\r\n\r\n            browserMoyo.addJavascriptInterface(new JSHtmlInterfaceMoyo(), \"JSBridge\");\r\n\r\n            browserMoyo.setWebViewClient(\r\n                    new WebViewClient() {\r\n\r\n                        @Override\r\n                        public void onPageStarted(WebView view, String url, Bitmap favicon) {\r\n                            super.onPageStarted(view, url, favicon);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPageFinished(WebView view, String url) {\r\n                            browserMoyo.loadUrl(\"javascript:window.JSBridge.showHTML('<html>'+document.getElementsByTagName('html')[0].innerHTML+'</html>');\");\r\n                        }\r\n                    }\r\n            );\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Log.d(TAG, \"Moyo Error\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    private class JSHtmlInterfaceMoyo{\r\n        @android.webkit.JavascriptInterface\r\n        public void showHTML(String html) {\r\n            final String htmlContent = html;\r\n\r\n            uiHandler.post(\r\n                    new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                                Log.d(\"CONNECT\", \"connected main Rozetka\");\r\n//                            if (!isFoundMoyo) {\r\n\r\n                                doc1 = Jsoup.parse(htmlContent);\r\n                                Elements elements = doc1.getElementsByAttributeValue(\"class\", BlockRozetkaClass);\r\n\r\n                                boolean isConsist = false;\r\n                                for (Element element : elements) {\r\n                                    if (!stopHandlers) {\r\n                                        try {\r\n                                            String url = \"https://eldorado.ua\"+element.getElementsByAttributeValue(\"class\", UrlRozetkaClass).first().child(0).attr(\"href\");\r\n                                            Element elprice = element.getElementsByAttributeValue(\"class\", PriceRozetkaClass).first().child(0);\r\n                                            Element elprice2 = element.getElementsByAttributeValue(\"class\", OldPriceRozetkaClass).first();\r\n\r\n\r\n\r\n                                            String price = \"\";\r\n                                            String oldPrice = \"\";\r\n\r\n                                            if (elprice!=null) {\r\n\r\n                                                if (elprice.text() != null) {\r\n                                                    String price1 = elprice.text().replace(\"₴\", \"\").replace(\" грн\", \"\").replace(\"грн\", \"\").replace(\".\", \"\") + \" грн\";\r\n\r\n                                                    if (elprice2.text() != \"\") {\r\n                                                        //Log.d(\"PRICE\", elprice2.text());\r\n                                                        String price2 = elprice2.text().replace(\"₴\", \"\").replace(\".\", \"\").replace(\" грн\", \"\").replace(\"грн\", \"\") + \" грн\";\r\n                                                        price = price1;\r\n                                                        oldPrice = price2;\r\n                                                    } else {\r\n                                                        price = price1;\r\n                                                        oldPrice = \"\";\r\n                                                    }\r\n\r\n                                                } else {\r\n                                                    price = getString(R.string.form_price);\r\n                                                    oldPrice = \"\";\r\n                                                }\r\n                                            } else {\r\n                                                price = getString(R.string.form_price);\r\n                                                oldPrice = \"\";\r\n                                            }\r\n                                            String title = element.getElementsByAttributeValue(\"class\", TitleRozetkaClass).first().child(0).child(0).text();\r\n                                            //String imgUrl = element.getElementsByAttributeValue(\"class\", ImageRozetkaClass).first().attr(\"src\");\r\n                                            String imgUrl = \"https://cdn.icon-icons.com/icons2/2440/PNG/512/do_not_disturb_icon_148542.png\";\r\n\r\n                                            boolean isContains = false;\r\n\r\n                                            for (int i = 0; i < articleListMoyo.size(); i++) {\r\n                                                if (articleListMoyo.get(i).getName().equals(title)) {\r\n                                                    isContains = true;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (!isContains) {\r\n\r\n                                                articleListMoyo.add(new Article(url, title, price, oldPrice, imgUrl));\r\n                                                Log.d(\"TEST\", new Article(url, title, price, oldPrice, imgUrl).toString());\r\n\r\n                                            }\r\n\r\n\r\n                                            isLoadedRozetka = true;\r\n\r\n                                            if (currentStoreIndex == 0) {\r\n                                                errorTextMain.setVisibility(View.INVISIBLE);\r\n                                            }\r\n\r\n                                        }\r\n                                        catch (Exception e) {\r\n                                            e.printStackTrace();\r\n                                            Log.d(TAG, \"Rozetka Error\");\r\n                                            return;\r\n                                        }\r\n                                }\r\n                                    else {\r\n                                        return;\r\n                                    }\r\n                            }\r\n                                if (getActivity() != null) {\r\n                                    getActivity().runOnUiThread(new Runnable() {\r\n\r\n                                        @Override\r\n                                        public void run() {\r\n\r\n                                            for (int i = goodsCountMoyo; i < articleListMoyo.size(); i++) {\r\n                                                goodsNamesListMoyo.add(articleListMoyo.get(i).getName());\r\n                                                goodsPricesListMoyo.add(articleListMoyo.get(i).getPrice());\r\n                                                goodsOldPricesListMoyo.add(articleListMoyo.get(i).getOldPrice());\r\n                                                goodsImagesListMoyo.add(articleListMoyo.get(i).getImg());\r\n                                                goodsColorsMoyo.add(ContextCompat.getColor(context, R.color.rozetka_colour));\r\n\r\n                                            }\r\n                                            goodsCountMoyo = articleListMoyo.size();\r\n\r\n                                            // to hide\r\n\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                if (articleListRozetka.size() > 0) {\r\n                                    isLoadedRozetka = true;\r\n                                    Log.d(\"TEST\", \"Rozetka =>\" + isLoadedRozetka);\r\n\r\n                                    if (!isStoreLoaded) {\r\n                                        currentStoreIndex = 0;\r\n                                        goodsListView.setAdapter(adapterMoyo);\r\n                                        initRecyclerView();\r\n                                        isStoreLoaded = true;\r\n                                        progressBar.setVisibility(View.GONE); // to hide\r\n                                    }\r\n\r\n                                }\r\n\r\n\r\n                            /*isLoadedRozetka = true;\r\n                            Log.d(\"TEST\", \"Rozetka =>\" + isLoadedRozetka);*/\r\n\r\n                                //Log.d(TAG, articleListMoyo.size() + \"  \" + goodsImagesListMoyo.size());\r\n\r\n\r\n                                isFoundMoyo = true;\r\n                                adapterMoyo.notifyDataSetChanged();\r\n                                goodsListView.setEnabled(true);\r\n//                            }\r\n\r\n                                //Log.d(\"TEST\", doc.html());\r\n                            }\r\n                    }\r\n            );\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    void getRozetkaGoods(String search) {\r\n        goodsListView.setEnabled(false);\r\n        isFoundRozetka = false;\r\n        uiHandler.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                String search1 = search.replace(\" \", \"%20\");\r\n                browserRozetka.loadUrl(search1);\r\n\r\n                //if(getSupportActionBar()!=null) getSupportActionBar().setTitle(browserRozetka.getUrl());\r\n                Log.d(TAG,\"Step 2\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    void getRozetka() {\r\n        try {\r\n\r\n            isFoundRozetka = false;\r\n            Log.d(TAG,\"Step 1\");\r\n            Log.d(TAG,\"TEST\");\r\n            browserRozetka.setWebChromeClient(new WebChromeClient());\r\n            browserRozetka.setVisibility(View.INVISIBLE);\r\n            browserRozetka.setLayerType(View.LAYER_TYPE_NONE,null);\r\n            browserRozetka.setWebChromeClient(new WebChromeClient());\r\n            browserRozetka.getSettings().setJavaScriptEnabled(true);\r\n            browserRozetka.getSettings().setJavaScriptCanOpenWindowsAutomatically(true);\r\n            browserRozetka.getSettings().setDomStorageEnabled(true);\r\n            browserRozetka.getSettings().setBlockNetworkLoads(false);\r\n            browserRozetka.getSettings().setBlockNetworkImage(false);\r\n            browserRozetka.getSettings().setLoadWithOverviewMode(true);\r\n            browserRozetka.getSettings().setUseWideViewPort(true);\r\n            browserRozetka.getSettings().setDefaultTextEncodingName(\"utf-8\");\r\n\r\n            browserRozetka.addJavascriptInterface(new JSHtmlInterfaceRozetka(), \"JSBridge\");\r\n\r\n            browserRozetka.setWebViewClient(\r\n                    new WebViewClient() {\r\n\r\n                        @Override\r\n                        public void onPageStarted(WebView view, String url, Bitmap favicon) {\r\n\r\n                            super.onPageStarted(view, url, favicon);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPageFinished(WebView view, String url) {\r\n                            browserRozetka.loadUrl(\"javascript:window.JSBridge.showHTML('<html>'+document.getElementsByTagName('html')[0].innerHTML+'</html>');\");\r\n\r\n                        }\r\n                    }\r\n            );\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Log.d(TAG, \"Rozetka Error\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private class JSHtmlInterfaceRozetka{\r\n        @android.webkit.JavascriptInterface\r\n        public void showHTML(String html) {\r\n            final String htmlContent = html;\r\n\r\n            uiHandler.post(\r\n                    new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                                Log.d(\"CONNECT\", \"connected main Allo\");\r\n\r\n                                if (!isFoundRozetka) {\r\n                                    Log.d(TAG, \"Step 3\");\r\n                                    //Log.d(TAG, htmlContent);\r\n                                    doc2 = Jsoup.parse(htmlContent);\r\n                                    Elements elements = doc2.getElementsByAttributeValue(\"class\", BlockAlloClass);\r\n                                    for (Element element : elements) {\r\n                                        if (!stopHandlers) {\r\n                                            try {\r\n\r\n                                                String title = element.getElementsByAttributeValue(\"class\", TitleAlloClass).first().text();\r\n                                                String url = element.getElementsByAttributeValue(\"class\", UrlAlloClass).first().attr(\"href\");\r\n                                                Element el = element.getElementsByAttributeValue(\"class\", PriceAlloClass).last();\r\n                                                Element el2 = element.getElementsByAttributeValue(\"class\", OldPriceAlloClass).first();\r\n                                                String price;\r\n                                                String oldPrice;\r\n                                                if (el != null) {\r\n                                                    String price1 = el.text().replace(\"₴\", \"\").replace(\" грн\", \"\").replace(\"грн\", \"\") + \" грн\";\r\n\r\n\r\n                                                    if (el2 != null && !el2.equals(el)) {\r\n                                                        String price2 = el2.text().replace(\"₴\", \"\").replace(\" грн\", \"\").replace(\"грн\", \"\") + \" грн\";\r\n                                                        price = price1;\r\n                                                        oldPrice = price2;\r\n                                                    } else {\r\n                                                        price = price1;\r\n                                                        oldPrice = \"\";\r\n                                                    }\r\n\r\n                                                } else {\r\n                                                    price = getString(R.string.form_price);\r\n                                                    oldPrice = \"\";\r\n                                                }\r\n                                                // String imgUrl = String.valueOf(element.getElementsByAttributeValue(\"class\", \"goods-tile__picture\").first().childrenSize());\r\n                                                String imgUrl = element.getElementsByAttributeValue(\"class\", ImageAlloClass).first().select(\"img\").attr(\"data-src\");\r\n\r\n                                                articleListRozetka.add(new Article(url, title, price, oldPrice, imgUrl));\r\n\r\n                                                isLoadedAllo = true;\r\n\r\n                                                if (currentStoreIndex == 2) {\r\n                                                    errorTextMain.setVisibility(View.INVISIBLE);\r\n                                                }\r\n\r\n                                            }catch (Exception e) {\r\n                                                e.printStackTrace();\r\n                                                Log.d(TAG, \"Rozetka Error\");\r\n                                                return;\r\n                                            }\r\n                                    } else {\r\n                                            return;\r\n                                        }\r\n                                }\r\n                                    if (getActivity() != null) {\r\n                                        getActivity().runOnUiThread(new Runnable() {\r\n\r\n                                            @Override\r\n                                            public void run() {\r\n\r\n                                                for (int i = goodsCountRozetka; i < articleListRozetka.size(); i++) {\r\n                                                    goodsNamesListRozetka.add(articleListRozetka.get(i).getName());\r\n                                                    goodsPricesListRozetka.add(articleListRozetka.get(i).getPrice());\r\n                                                    goodsOldPricesListRozetka.add(articleListRozetka.get(i).getOldPrice());\r\n                                                    goodsColorsRozetka.add(ContextCompat.getColor(context, R.color.allo_colour));\r\n\r\n                                                    goodsImagesListRozetka.add(articleListRozetka.get(i).getImg());\r\n                                                    //Log.d(TAG, articleListRozetka.get(i).toString());\r\n\r\n                                                }\r\n                                                goodsCountRozetka = articleListRozetka.size();\r\n                                                Element loadElement = doc2.getElementsByAttributeValue(\"class\", LoadMoreAlloClass).last();\r\n\r\n                                                if (loadElement != null && goodsCount > 0 && !stopHandlers) {\r\n                                                    goodsNamesListRozetka.add(getString(R.string.load_more));\r\n                                                    goodsPricesListRozetka.add(\"\");\r\n                                                    goodsOldPricesListRozetka.add(\"\");\r\n                                                    goodsColorsRozetka.add(ContextCompat.getColor(context, R.color.loadmore_colour));\r\n\r\n                                                    goodsImagesListRozetka.add(\"https://image.flaticon.com/icons/png/512/16/16770.png\");\r\n                                                    articleListRozetka.add(new Article(\" \", getString(R.string.load_more), \"\", \"\", \"https://image.flaticon.com/icons/png/512/16/16770.png\"));\r\n\r\n                                                }\r\n\r\n\r\n                                            }\r\n                                        });\r\n                                    }\r\n\r\n\r\n                                    if (articleListRozetka.size() > 0) {\r\n                                        isLoadedAllo = true;\r\n                                        Log.d(\"TEST\", \"Allo =>\" + isLoadedAllo);\r\n                                        if (!isStoreLoaded) {\r\n                                            currentStoreIndex = 2;\r\n                                            goodsListView.setAdapter(adapterRozetka);\r\n                                            initRecyclerView();\r\n                                            isStoreLoaded = true;\r\n                                            progressBar.setVisibility(View.GONE); // to hide\r\n                                        }\r\n                                  /*  if (!isLoadedCitrus && !isLoadedRozetka && isLoadedAllo) {\r\n                                        Log.d(\"TEST\", \"Allo => SHOW\");\r\n\r\n\r\n                                        // isLoadedAllo = false;\r\n                                        initRecyclerView();\r\n                                    }*/\r\n                                    }\r\n\r\n\r\n                                    isFoundRozetka = true;\r\n                                    adapterRozetka.notifyDataSetChanged();\r\n                                    goodsListView.setEnabled(true);\r\n                                }\r\n                            }\r\n                    }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    class MyAdapter extends ArrayAdapter<String> {\r\n\r\n        Context context;\r\n        List<String> rTitle = new ArrayList();\r\n        List<String> rDescription = new ArrayList();\r\n        List<String> rDescription2 = new ArrayList();\r\n        List<String> rImgs = new ArrayList();\r\n        List<Integer> rColor = new ArrayList();\r\n        List<Article> arrLIst = new ArrayList<>();\r\n        boolean isGoodsChoosen = false;\r\n\r\n\r\n        MyAdapter(Context c, List<String> title, List<String> description, List<String> description2, List<String> imgs,List<Integer> color, List arrList) {\r\n            super(c, R.layout.goods_view, R.id.goodsTitleMain, title);\r\n            this.context = c;\r\n            this.rTitle = title;\r\n            this.rDescription = description;\r\n            this.rDescription2 = description2;\r\n            this.rImgs = imgs;\r\n            this.rColor = color;\r\n            this.arrLIst = arrList;\r\n\r\n        }\r\n\r\n\r\n        @NonNull\r\n        @Override\r\n        public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n            LayoutInflater layoutInflater = (LayoutInflater) getActivity().getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n            View goodsView = layoutInflater.inflate(R.layout.goods_view, parent, false);\r\n            ImageView images = goodsView.findViewById(R.id.goodsImageMain);\r\n            ImageView imageFavourite = goodsView.findViewById(R.id.goodsFavourite);\r\n            TextView myTitle = goodsView.findViewById(R.id.goodsTitleMain);\r\n            TextView myDescription = goodsView.findViewById(R.id.goodsPriceMain);\r\n            TextView myDescription2 = goodsView.findViewById(R.id.oldGoodsPriceMain);\r\n            CardView backgroundCard = goodsView.findViewById(R.id.backgroungCard);\r\n\r\n\r\n            myDescription.setTextColor(ContextCompat.getColor(context,R.color.price_color));\r\n            myDescription2.setTextColor(ContextCompat.getColor(context,R.color.oldprice_colour));\r\n            // now set our resources on views\r\n\r\n\r\n            Glide.with(context).load(rImgs.get(position)).into(images);\r\n            myTitle.setText(rTitle.get(position));\r\n            backgroundCard.setCardBackgroundColor(rColor.get(position));\r\n\r\n\r\n            mDatabase.child(\"Users\").child(user.getUid()).addValueEventListener(new ValueEventListener() {\r\n                public boolean inChosen;\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n\r\n\r\n                    try {\r\n\r\n                        for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n\r\n                            String str = arrLIst.get(position).getUrl();\r\n                            String[] goodsInfo = String.valueOf(childDataSnapshot.getValue()).split(\"SPLITFORBUY\", 2);\r\n                            if (goodsInfo[0].equals(str)){\r\n\r\n                                imageFavourite.setImageResource(R.drawable.ic_baseline_star_24);\r\n                            }\r\n\r\n\r\n                        }\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                    mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n            if (rTitle.get(position) == getString(R.string.load_more)) {\r\n                imageFavourite.setVisibility(View.GONE);\r\n                myTitle.setTypeface(null, Typeface.BOLD_ITALIC);\r\n                myTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 25);\r\n            }\r\n            try {\r\n                myDescription.setText(rDescription.get(position));\r\n                myDescription2.setText(rDescription2.get(position));\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n                Log.d(TAG, \"Rozetka Error\");\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            imageFavourite.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    //Log.d(TAG,arrLIst.get(position).getUrl());\r\n                    //Log.d(TAG,arrLIst.get(position).getImg());\r\n                    //Log.d(TAG,arrLIst.get(position).getName());\r\n                    // Log.d(TAG,arrLIst.get(position).getPrice());\r\n\r\n\r\n                    if (isConnected()){\r\n                        mDatabase.child(\"Users\").child(user.getUid()).addValueEventListener(new ValueEventListener() {\r\n                            public boolean inChosen;\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                Map<String, Object> td = (HashMap<String,Object>) snapshot.getValue();\r\n\r\n                                for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n\r\n                                    DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child( childDataSnapshot.getKey());\r\n                                    Map<String,Object> taskMap = new HashMap<String,Object>();\r\n                                    objRef.updateChildren(taskMap);\r\n\r\n\r\n                                    String str = arrLIst.get(position).getUrl();\r\n                                    String[] goodsInfo = String.valueOf(childDataSnapshot.getValue()).split(\"SPLITFORBUY\", 2);\r\n                                    if (goodsInfo[0].equals(str)){\r\n                                        inChosen = true;\r\n\r\n                                        imageFavourite.setImageResource(R.drawable.ic_baseline_star_border_24);\r\n\r\n                                        mDatabase.child(\"Users\").child(user.getUid()).child(childDataSnapshot.getKey()).setValue(null);\r\n                                        mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n                                        //imageFavourite.setImageResource(R.drawable.ic_baseline_star_24);\r\n\r\n                                        break;\r\n\r\n                                    }else{\r\n                                        inChosen = false;\r\n                                        imageFavourite.setImageResource(R.drawable.ic_baseline_star_24);\r\n\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n\r\n                                if (!inChosen){\r\n                                    imageFavourite.setImageResource(R.drawable.ic_baseline_star_24);\r\n                                    String str = \"\";\r\n                                    if (arrLIst.get(position).getUrl().contains(\"allo.ua\")){\r\n                                        str = \"ALLO\";\r\n                                    } else if (arrLIst.get(position).getUrl().contains(\"citrus.ua\")){\r\n                                        str = \"CITRUS\";\r\n                                    } else if (arrLIst.get(position).getUrl().contains(\"eldorado.ua\")){\r\n                                        str = \"ELDORADO\";\r\n                                    }\r\n                                    mDatabase.child(\"Users\").child(user.getUid()).push().setValue(arrLIst.get(position).getUrl()+\"SPLITFORBUY\"+arrLIst.get(position).getImg()+\"SPLITFORBUY\"+arrLIst.get(position).getName()+\"SPLITFORBUY\"+str);\r\n                                    mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                                    return;\r\n                                }\r\n\r\n\r\n\r\n\r\n                            }\r\n\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n                    } else {\r\n                        Toast.makeText(getActivity(),getString(R.string.internet_error),Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            });\r\n\r\n            return goodsView;\r\n        }\r\n    }\r\n\r\n\r\n    class Article {\r\n        private String url;\r\n        private String name;\r\n        private String img;\r\n        private String price;\r\n        private String oldPrice;\r\n\r\n\r\n        public Article(String url, String name, String price, String oldPrice, String img) {\r\n            this.url = url;\r\n            this.name = name;\r\n            this.price = price;\r\n            this.oldPrice = oldPrice;\r\n            this.img = img;\r\n        }\r\n\r\n\r\n        public String getUrl() {\r\n            return url;\r\n        }\r\n\r\n        public void setUrl(String url) {\r\n            this.url = url;\r\n        }\r\n\r\n        public String getName() {\r\n            return name;\r\n        }\r\n\r\n        public void setName(String name) {\r\n            this.name = name;\r\n        }\r\n\r\n        public String getPrice() {\r\n            return price;\r\n        }\r\n\r\n        public String getOldPrice() { return oldPrice; }\r\n\r\n        public void setPrice(String name) {\r\n            this.price = price;\r\n        }\r\n\r\n        public String getImg() {\r\n            return img;\r\n        }\r\n\r\n        public void setImg(String img) {\r\n            this.img = img;\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return \"Article{\" +\r\n                    \"url='\" + url + '\\'' +\r\n                    \", name='\" + name + '\\'' +\r\n                    \", img='\" + img + '\\'' +\r\n                    \", price='\" + price + '\\'' +\r\n                    \", oldPrice='\" + price + '\\'' +\r\n                    '}';\r\n        }\r\n    }\r\n\r\n    static class RecyclerItemClickListener implements RecyclerView.OnItemTouchListener {\r\n        private OnItemClickListener mListener;\r\n\r\n        public interface OnItemClickListener {\r\n            public void onItemClick(View view, int position);\r\n\r\n            public void onLongItemClick(View view, int position);\r\n        }\r\n\r\n        GestureDetector mGestureDetector;\r\n\r\n        public RecyclerItemClickListener(Context context, final RecyclerView recyclerView, OnItemClickListener listener) {\r\n            mListener = listener;\r\n            mGestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {\r\n                @Override\r\n                public boolean onSingleTapUp(MotionEvent e) {\r\n                    return true;\r\n                }\r\n\r\n                @Override\r\n                public void onLongPress(MotionEvent e) {\r\n                    View child = recyclerView.findChildViewUnder(e.getX(), e.getY());\r\n                    if (child != null && mListener != null) {\r\n                        mListener.onLongItemClick(child, recyclerView.getChildAdapterPosition(child));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public boolean onInterceptTouchEvent(RecyclerView view, MotionEvent e) {\r\n            View childView = view.findChildViewUnder(e.getX(), e.getY());\r\n            if (childView != null && mListener != null && mGestureDetector.onTouchEvent(e)) {\r\n                mListener.onItemClick(childView, view.getChildAdapterPosition(childView));\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onTouchEvent(RecyclerView view, MotionEvent motionEvent) {\r\n        }\r\n\r\n        @Override\r\n        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {\r\n        }\r\n    }\r\n\r\n\r\n    class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerViewAdapter.ViewHolder> {\r\n\r\n        private static final String TAG = \"RecyclerViewAdapter\";\r\n\r\n        //vars\r\n        private ArrayList<String> mNames = new ArrayList<>();\r\n        private ArrayList<Integer> mImageUrls = new ArrayList<>();\r\n        private ArrayList<Integer> mCardColors = new ArrayList<>();\r\n        private Context mContext;\r\n\r\n        public RecyclerViewAdapter(Context context, ArrayList<String> names, ArrayList<Integer> imageUrls, ArrayList<Integer> cardColors) {\r\n            mNames = names;\r\n            mImageUrls = imageUrls;\r\n            mContext = context;\r\n            mCardColors = cardColors;\r\n        }\r\n\r\n        @Override\r\n        public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.store_view, parent, false);\r\n            return new ViewHolder(view);\r\n        }\r\n\r\n        @Override\r\n        public void onBindViewHolder(ViewHolder holder, final int position) {\r\n            //Log.d(TAG, \"onBindViewHolder: called.\");\r\n\r\n\r\n            if (currentStoreIndex==0 && isLoadedRozetka){\r\n                errorTextMain.setVisibility(View.INVISIBLE);\r\n            } else if (currentStoreIndex==1 && isLoadedCitrus) {\r\n                errorTextMain.setVisibility(View.INVISIBLE);\r\n            } else if (currentStoreIndex==2 && isLoadedAllo){\r\n                errorTextMain.setVisibility(View.INVISIBLE);\r\n            } else if (currentStoreIndex==0 && !isConnected() && !isLoadedRozetka){\r\n                errorTextMain.setVisibility(View.VISIBLE);\r\n            } else if (currentStoreIndex==1 && !isConnected() && !isLoadedCitrus) {\r\n                errorTextMain.setVisibility(View.VISIBLE);\r\n            } else if (currentStoreIndex==2 && !isConnected() && !isLoadedAllo){\r\n                errorTextMain.setVisibility(View.VISIBLE);\r\n            } else if (currentStoreIndex==0 && isConnected() && !isLoadedRozetka){\r\n                errorTextMain.setVisibility(View.INVISIBLE);\r\n            } else if (currentStoreIndex==1 && isConnected() && !isLoadedCitrus) {\r\n                errorTextMain.setVisibility(View.INVISIBLE);\r\n            } else if (currentStoreIndex==2 && isConnected() && !isLoadedAllo){\r\n                errorTextMain.setVisibility(View.INVISIBLE);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            holder.image.setImageResource(mImageUrls.get(position));\r\n\r\n            holder.name.setText(mNames.get(position));\r\n            holder.card.setCardBackgroundColor(mCardColors.get(position));\r\n\r\n            if(position == currentStoreIndex){\r\n                holder.name.setTextSize(TypedValue.COMPLEX_UNIT_SP, 22);\r\n\r\n                holder.image.getLayoutParams().height = (int) getResources().getDimension(R.dimen.imageview_height);\r\n                holder.image.getLayoutParams().width = (int) getResources().getDimension(R.dimen.imageview_width);\r\n\r\n\r\n            }\r\n            holder.image.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        @Override\r\n        public int getItemCount() {\r\n            return mImageUrls.size();\r\n        }\r\n\r\n\r\n        public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n            ImageView image;\r\n            TextView name;\r\n            CardView card;\r\n\r\n            public ViewHolder(View itemView) {\r\n                super(itemView);\r\n                image = itemView.findViewById(R.id.storeImageMain);\r\n                name = itemView.findViewById(R.id.storeTitleMain);\r\n                card = itemView.findViewById(R.id.storeCard);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    class HistoryAdapter extends ArrayAdapter<String> {\r\n\r\n        Context context;\r\n        List<String> historyText = new ArrayList();\r\n\r\n\r\n\r\n\r\n        HistoryAdapter(Context c, List<String> searches) {\r\n            super(c, R.layout.favourite_view, R.id.historySearchString, searches);\r\n            this.context = c;\r\n            this.historyText = searches;\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        @NonNull\r\n        @Override\r\n        public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n            LayoutInflater layoutInflater = (LayoutInflater) getActivity().getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n            View goodsView = layoutInflater.inflate(R.layout.favourite_view, parent, false);\r\n            TextView history = goodsView.findViewById(R.id.historySearchString);\r\n            history.setTextColor(ContextCompat.getColor(context,R.color.text_searches));\r\n            ImageView search = goodsView.findViewById(R.id.historySearch);\r\n            ImageView historyIcon = goodsView.findViewById(R.id.historyIcon);\r\n\r\n\r\n            history.setText(historyText.get(position));\r\n            search.setImageResource(R.drawable.ic_baseline_search_24);\r\n            historyIcon.setImageResource(R.drawable.ic_baseline_history_24);\r\n\r\n            search.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n\r\n                    String recentSearchString = searches.get(position);\r\n                    Log.d(\"TEST1\", \"onItemClick: \");\r\n                    mySearchView.setQuery(recentSearchString, true);\r\n\r\n                }\r\n            });\r\n\r\n\r\n            return goodsView;\r\n        }}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/goodsfinder/HomeFragment.java	(revision 3022c5ba5ed64e93d4a63b7f2315d1bef730cc1e)
+++ app/src/main/java/com/example/goodsfinder/HomeFragment.java	(date 1619527348897)
@@ -548,6 +548,7 @@
         mySearchView = (SearchView) view.findViewById(R.id.goodsSearchView);
         goodsListView = (ListView) view.findViewById(R.id.goodsList);
         storeListView = (RecyclerView) view.findViewById(R.id.storeListView);
+
         progressBar = view.findViewById(R.id.progressBar);
         adapterCitrus = new MyAdapter(getContext(), goodsNamesList, goodsPricesList, goodsOldPricesList, goodsImagesList, goodsColorsList, articleList);
         adapterMoyo = new MyAdapter(getContext(), goodsNamesListMoyo, goodsPricesListMoyo, goodsOldPricesListMoyo, goodsImagesListMoyo, goodsColorsMoyo, articleListMoyo);
