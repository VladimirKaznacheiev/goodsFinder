Index: app/src/main/java/com/example/goodsfinder/FavouriteFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.goodsfinder;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.res.Resources;\r\nimport android.graphics.Bitmap;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.StrictMode;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport android.widget.AdapterView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.firebase.ui.database.FirebaseListAdapter;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\nimport org.jsoup.nodes.Element;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class FavouriteFragment extends Fragment {\r\n    private FirebaseAuth mAuth;\r\n    private DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference();;\r\n    private List<String> DiscrTasks;\r\n\r\n    private Document doc = null;\r\n    private Document doc1 = null;\r\n    private final Handler uiHandler = new Handler();\r\n\r\n    private String priceRozetka = \"0\";\r\n    private int counterRozetka = 0;\r\n    private int iRozetka = 0;\r\n    private boolean isFor = false;\r\n\r\n    boolean isLoadedRozetka = false;\r\n    private  boolean isShowed = false;\r\n\r\n    boolean isNotEmpty = false;\r\n\r\n    private List<String> urlsRozetka = new ArrayList<String>();\r\n    private List<String> positionsRozetka = new ArrayList<String>();\r\n\r\n    private List<String> infoLoaded = new ArrayList<String>();\r\n    private List<String> infoLoadedUp = new ArrayList<String>();\r\n\r\n    TextView errorTextChoosen;\r\n    ProgressBar progressBar;\r\n    TextView emptyTextChoosen;\r\n\r\n    private Context context;\r\n\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        this.context = context;\r\n    }\r\n\r\n    FirebaseUser user = mAuth.getInstance().getCurrentUser();\r\n    //String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n\r\n    WebView browserRozetka;\r\n\r\n    ArrayList<String> favouritesImagesList = new ArrayList<>();\r\n    ArrayList<Integer> favouritesStoreImagesList = new ArrayList<>();\r\n    ArrayList<String> favouritesOldPricesList = new ArrayList<>();\r\n    ArrayList<String> favouritesPricesList = new ArrayList<>();\r\n    ArrayList<String> favouritesNamesList = new ArrayList<>();\r\n    ArrayList<String> favouritesUrlList = new ArrayList<>();\r\n    ArrayList<Integer> favouritesColourList = new ArrayList<>();\r\n\r\n\r\n\r\n    ArrayList<String> favouritesList = new ArrayList<>();\r\n\r\n    ListView goodsListView;\r\n    MyAdapter adapter1;\r\n\r\n\r\n    FirebaseListAdapter mAdapter;\r\n\r\n    boolean isConnected() {\r\n        boolean connected = false;\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            connected = true;\r\n        } else\r\n            connected = false;\r\n\r\n        return connected;\r\n    }\r\n\r\n\r\n    private void loadChoosen(){\r\n\r\n        mDatabase.child(\"Users\").child(user.getUid()).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                Map<String, Object> td = (HashMap<String, Object>) snapshot.getValue();\r\n                favouritesUrlList.clear();\r\n                favouritesColourList.clear();\r\n                favouritesImagesList.clear();\r\n                favouritesStoreImagesList.clear();\r\n                favouritesNamesList.clear();\r\n                favouritesPricesList.clear();\r\n                favouritesOldPricesList.clear();\r\n                infoLoaded.clear();\r\n                infoLoadedUp.clear();\r\n                favouritesList.clear();\r\n\r\n                boolean isNotEmpty = false;\r\n\r\n                for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n\r\n                    isNotEmpty = true;\r\n\r\n                    int counter = 0;\r\n                    DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child(childDataSnapshot.getKey());\r\n                    Map<String, Object> taskMap = new HashMap<String, Object>();\r\n                    objRef.updateChildren(taskMap);\r\n\r\n\r\n                    favouritesList.add(String.valueOf(childDataSnapshot.getValue()));\r\n                    String[] goodsInfo = String.valueOf(childDataSnapshot.getValue()).split(\"SPLITFORBUY\", 4);\r\n\r\n\r\n                    favouritesUrlList.add(counter, goodsInfo[0]);\r\n                    favouritesImagesList.add(counter, goodsInfo[1]);\r\n                    favouritesNamesList.add(counter, goodsInfo[2]);\r\n\r\n\r\n                    if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                        favouritesStoreImagesList.add(counter,R.drawable.eldoradologo);\r\n                        favouritesColourList.add(counter,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                    }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                        favouritesStoreImagesList.add(counter,R.drawable.allologo);\r\n                        favouritesColourList.add(counter, ContextCompat.getColor(context,R.color.allo_colour));\r\n                    }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                        favouritesStoreImagesList.add(counter,R.drawable.citruslogo);\r\n                        favouritesColourList.add(counter,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                    }\r\n\r\n                    if (goodsInfo[0].contains(\"allo.ua\")) {\r\n                        try {\r\n\r\n                            mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                            for (int i = 0; i < positionsRozetka.size(); i++) {\r\n                                positionsRozetka.set(i, String.valueOf(Integer.parseInt(positionsRozetka.get(i)) + 1));\r\n                            }\r\n\r\n                            doc = Jsoup.connect(goodsInfo[0]).get();\r\n                            Element elements = doc.getElementsByAttributeValue(\"class\", \"sum\").last();\r\n                            Element elements2 = doc.getElementsByAttributeValue(\"class\", \"sum\").first();\r\n\r\n                            if (elements!=null){\r\n                                String price1 = elements.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n\r\n                                if (elements2!=null && !elements2.equals(elements)){\r\n                                    String price2 = elements2.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n                                    favouritesPricesList.add(counter, price1);\r\n                                    favouritesOldPricesList.add(counter, price2);\r\n\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+price2+\"SPLITFORBUY\"+price1);\r\n                                } else {\r\n                                    favouritesPricesList.add(counter,  price1);\r\n                                    favouritesOldPricesList.add(counter, \" \");\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+\"0\"+\"SPLITFORBUY\"+price1);\r\n                                }\r\n\r\n\r\n\r\n                            } else {\r\n                                favouritesPricesList.add(counter, context.getString(R.string.form_price));\r\n                                favouritesOldPricesList.add(counter, \" \");\r\n                            }\r\n\r\n                        } catch (IOException e) {\r\n                            mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n                            e.printStackTrace();\r\n                        }\r\n                    } else if (goodsInfo[0].contains(\"https://eldorado.ua\")) {\r\n                        mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n\r\n\r\n                        for (int i = 0; i < positionsRozetka.size(); i++) {\r\n                            positionsRozetka.set(i, String.valueOf(Integer.parseInt(positionsRozetka.get(i)) + 1));\r\n                        }\r\n                        urlsRozetka.add(goodsInfo[0]);\r\n                        positionsRozetka.add(String.valueOf(counter));\r\n\r\n                        favouritesPricesList.add(counter,  context.getString(R.string.loading));\r\n                        favouritesOldPricesList.add(counter,  context.getString(R.string.loading));\r\n                        infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\");\r\n\r\n                    } else if (goodsInfo[0].contains(\"citrus.ua\")) {\r\n\r\n                        try {\r\n\r\n                            mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                            for (int i = 0; i < positionsRozetka.size(); i++) {\r\n                                positionsRozetka.set(i, String.valueOf(Integer.parseInt(positionsRozetka.get(i)) + 1));\r\n                            }\r\n\r\n                            doc = Jsoup.connect(goodsInfo[0]).get();\r\n                            Element elements = doc.getElementsByAttributeValue(\"class\", \"buy-section__new-price\").last();\r\n                            Element elements2 = doc.getElementsByAttributeValue(\"class\", \"buy-section__old-price\").last();\r\n\r\n/*                                String price1 = elements.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n                                String price2 = elements2.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";*/\r\n\r\n                            if (elements!=null){\r\n                                String price1 = elements.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n\r\n                                if (elements2!=null){\r\n                                    String price2 = elements2.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\";\r\n                                    favouritesPricesList.add(counter, price1);\r\n                                    favouritesOldPricesList.add(counter, price2);\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+price2+\"SPLITFORBUY\"+price1);\r\n                                } else {\r\n                                    favouritesPricesList.add(counter,  price1);\r\n                                    favouritesOldPricesList.add(counter, \" \");\r\n                                    infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+\"0\"+\"SPLITFORBUY\"+price1);\r\n                                }\r\n\r\n                            } else {\r\n                                favouritesPricesList.add(counter, context.getString(R.string.form_price));\r\n                                favouritesOldPricesList.add(counter, \" \");\r\n                                infoLoaded.add(goodsInfo[0]+\"SPLITFORBUY\"+goodsInfo[1]+\"SPLITFORBUY\"+goodsInfo[2]+\"SPLITFORBUY\"+goodsInfo[3]+\"SPLITFORBUY\"+\"0\"+\"SPLITFORBUY\"+\"0\");\r\n                            }\r\n\r\n\r\n\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n\r\n                    adapter1.notifyDataSetChanged();\r\n\r\n                    counter++;\r\n\r\n                }\r\n\r\n                if (!isNotEmpty){\r\n                    emptyTextChoosen.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                progressBar.setVisibility(View.GONE);\r\n\r\n                //Log.d(\"TEST\", String.valueOf(urlsRozetka));\r\n                //Log.d(\"TEST\", String.valueOf(positionsRozetka));\r\n\r\n\r\n                for (int i = 0; i < infoLoaded.size(); i++) {\r\n                    infoLoadedUp.add(i, infoLoaded.get(i));\r\n                }\r\n\r\n                iRozetka = 0;\r\n\r\n                try {\r\n                    browserRozetka.loadUrl(urlsRozetka.get(urlsRozetka.size() - 1));\r\n                } catch (Exception e) {\r\n                    isLoadedRozetka = true;\r\n                    e.printStackTrace();\r\n                    Log.d(\"ERROR\", \"Load Error\");\r\n                }\r\n                mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);\r\n        setRetainInstance(true);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_favourite2,container,false);\r\n\r\n        super.onCreate(savedInstanceState);\r\n        //setContentView(R.layout.chosen_goods_activity);\r\n\r\n        String[] filters = { context.getString(R.string.def),  context.getString(R.string.up), context.getString(R.string.down)};\r\n\r\n        Spinner spinner = (Spinner) view.findViewById(R.id.spinner);\r\n        ArrayAdapter<String> adapterSpinner = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_item, filters);\r\n        adapterSpinner.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinner.setAdapter(adapterSpinner);\r\n\r\n        AdapterView.OnItemSelectedListener itemSelectedListener = new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                String item = (String)parent.getItemAtPosition(position);\r\n\r\n                if (item.equals(context.getString(R.string.def)) && isLoadedRozetka){\r\n                    sortDefault();\r\n                    Log.d(\"TETS\", item);\r\n                } else if (item.equals(context.getString(R.string.up))){\r\n                    Log.d(\"ELDORADO\", String.valueOf(isLoadedRozetka));\r\n                    sortUp();\r\n                    Log.d(\"TETS\", item);\r\n                } else if (item.equals(context.getString(R.string.down))){\r\n                    sortDown();\r\n                    Log.d(\"TETS\", item);\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n            }\r\n        };\r\n        spinner.setOnItemSelectedListener(itemSelectedListener);\r\n\r\n        errorTextChoosen = view.findViewById(R.id.errorTextChoosen);\r\n        emptyTextChoosen = view.findViewById(R.id.emptyTextChoosen);\r\n        errorTextChoosen.setVisibility(View.INVISIBLE);\r\n        emptyTextChoosen.setVisibility(View.INVISIBLE);\r\n\r\n        progressBar = view.findViewById(R.id.progressBarChoosen);\r\n\r\n\r\n        if (!isConnected()){\r\n            progressBar.setVisibility(View.GONE);\r\n            errorTextChoosen.setVisibility(View.VISIBLE);\r\n        } else {\r\n            loadChoosen();\r\n        }\r\n\r\n        if (android.os.Build.VERSION.SDK_INT > 9)\r\n        {\r\n            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n            StrictMode.setThreadPolicy(policy);\r\n        }\r\n\r\n        browserRozetka = new WebView(getActivity());\r\n        getMoyo();\r\n        view.findViewById(R.id.btn_reload).setOnClickListener(this::onClick);\r\n\r\n        goodsListView = (ListView) view.findViewById(R.id.favouritesView);\r\n\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n\r\n        adapter1 = new MyAdapter(getActivity(),favouritesNamesList,favouritesPricesList,favouritesOldPricesList,favouritesImagesList,favouritesStoreImagesList ,favouritesUrlList,favouritesColourList);\r\n        goodsListView.setAdapter(adapter1);\r\n\r\n        goodsListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n\r\n                Uri address = Uri.parse(favouritesUrlList.get(i));\r\n                Intent openlinkIntent = new Intent(Intent.ACTION_VIEW, address);\r\n                startActivity(openlinkIntent);\r\n            }\r\n\r\n        });\r\n\r\n        return view;\r\n\r\n    }\r\n\r\n    void getMoyo() {\r\n        try {\r\n            browserRozetka.setVisibility(View.INVISIBLE);\r\n            browserRozetka.setLayerType(View.LAYER_TYPE_NONE, null);\r\n            browserRozetka.getSettings().setJavaScriptEnabled(true);\r\n            browserRozetka.getSettings().setBlockNetworkImage(false);\r\n            browserRozetka.getSettings().setDomStorageEnabled(true);\r\n            browserRozetka.getSettings().setLoadsImagesAutomatically(true);\r\n            browserRozetka.getSettings().setBlockNetworkLoads(false);\r\n            browserRozetka.getSettings().setJavaScriptCanOpenWindowsAutomatically(true);\r\n            browserRozetka.getSettings().setDefaultTextEncodingName(\"utf-8\");\r\n            //browserRozetka.getSettings().setLoadWithOverviewMode(true);\r\n\r\n\r\n            browserRozetka.addJavascriptInterface(new JSHtmlInterfaceMoyo(), \"JSBridge\");\r\n\r\n            browserRozetka.setWebViewClient(\r\n                    new WebViewClient() {\r\n\r\n                        @Override\r\n                        public void onPageStarted(WebView view, String url, Bitmap favicon) {\r\n                            super.onPageStarted(view, url, favicon);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPageFinished(WebView view, String url) {\r\n                            browserRozetka.loadUrl(\"javascript:window.JSBridge.showHTML('<html>'+document.getElementsByTagName('html')[0].innerHTML+'</html>');\");\r\n                            //Log.d(\"TEST1\", \"loaded\");\r\n                        }\r\n                    }\r\n            );\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Log.d(\"ERROR\", \"Rozetka Error\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private class JSHtmlInterfaceMoyo{\r\n        @android.webkit.JavascriptInterface\r\n        public void showHTML(String html) {\r\n            final String htmlContent = html;\r\n\r\n            uiHandler.post(\r\n                    new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n\r\n                            try {\r\n\r\n                                doc1 = Jsoup.parse(htmlContent);\r\n                                Log.d(\"ELDORADO\", doc1.getElementsByAttributeValue(\"class\", \"price-value\").last().text());\r\n                                //Log.d(\"ELDORADO\", doc1.getElementsByAttributeValue(\"class\", \"base-slick slick-slide-item\").last().html());\r\n                                priceRozetka = doc1.getElementsByAttributeValue(\"class\", \"price-value \").last().text();\r\n                                Element oldPriceRozetka = doc1.getElementsByAttributeValue(\"class\", \"old-price-value\").last();\r\n\r\n\r\n\r\n\r\n                                if (priceRozetka!=null){\r\n                                    String price1;\r\n                                    if (!priceRozetka.contains(context.getString(R.string.form_price))){\r\n                                        price1 = priceRozetka.replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\").replace(\".\", \"\") + \" грн\";\r\n                                    } else {\r\n                                        price1 = priceRozetka;\r\n                                    }\r\n\r\n\r\n                                    if (oldPriceRozetka!=null){\r\n                                        String price2 = oldPriceRozetka.text().replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\").replace(\".\", \"\") + \" грн\";\r\n                                        Log.d(\"ELDORADOLOG\", String.valueOf(positionsRozetka+\", \"+iRozetka));\r\n                                        favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), price1);\r\n                                        favouritesOldPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  price2);\r\n                                        infoLoaded.set(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  infoLoaded.get(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)))+price2+\"SPLITFORBUY\"+price1);\r\n                                    } else {\r\n                                        favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  price1);\r\n                                        favouritesOldPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  \" \");\r\n                                        infoLoaded.set(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  infoLoaded.get(infoLoaded.size()-1-Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)))+\"0\"+\"SPLITFORBUY\"+price1);\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                } else {\r\n                                    favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), context.getString(R.string.form_price));\r\n                                    favouritesOldPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)),  \" \");\r\n                                }\r\n\r\n                                //favouritesPricesList.set(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), priceRozetka.replace(\"₴\", \"\").replace(\"грн\", \"\").replace(\" грн\", \"\") + \" грн\");\r\n                                adapter1.notifyDataSetChanged();\r\n                                progressBar.setVisibility(View.GONE);\r\n\r\n\r\n                                getActivity().runOnUiThread(new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n\r\n                                        if(iRozetka>=urlsRozetka.size()-1){\r\n\r\n                                            for (int i = 0; i < infoLoaded.size(); i++) {\r\n                                                infoLoadedUp.set(i, infoLoaded.get(i));\r\n                                            }\r\n\r\n                                            Log.d(\"ELDORADO\", \"TRUE\");\r\n                                            isLoadedRozetka = true;\r\n\r\n\r\n                                            return;\r\n                                        }\r\n\r\n                                        iRozetka ++;\r\n                                        browserRozetka.loadUrl(urlsRozetka.get(urlsRozetka.size()-1-iRozetka));\r\n                                    }\r\n                                });\r\n\r\n\r\n                                //favouritesPricesList.add(Integer.parseInt(positionsRozetka.get(positionsRozetka.size()-1-iRozetka)), priceRozetka.replace(\"₴\", \"\"));\r\n\r\n\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                                Log.d(\"ERROR\", \"Moyo Error\");\r\n                                priceRozetka = \"0\";\r\n                            }\r\n                        }\r\n                    }\r\n            );\r\n        }\r\n    }\r\n\r\n    public void onClick(View view) {\r\n\r\n        if(view.getId() == R.id.btn_reload) {\r\n            if (isConnected()){\r\n                errorTextChoosen.setVisibility(View.INVISIBLE);\r\n                emptyTextChoosen.setVisibility(View.INVISIBLE);\r\n                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                favouritesUrlList.clear();\r\n                favouritesImagesList.clear();\r\n                favouritesStoreImagesList.clear();\r\n                favouritesNamesList.clear();\r\n                favouritesPricesList.clear();\r\n                favouritesOldPricesList.clear();\r\n                favouritesColourList.clear();\r\n                isLoadedRozetka = false;\r\n                positionsRozetka.clear();\r\n                iRozetka = 0;\r\n                adapter1.notifyDataSetChanged();\r\n                infoLoaded.clear();\r\n\r\n                loadChoosen();\r\n            } else {\r\n                Toast.makeText(getActivity(),context.getString(R.string.internet_error),Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n    public void sortDefault(){\r\n        if (isLoadedRozetka){\r\n\r\n            Log.d(\"COMMON\", String.valueOf(infoLoaded));\r\n\r\n            favouritesUrlList.clear();\r\n            favouritesImagesList.clear();\r\n            favouritesStoreImagesList.clear();\r\n            favouritesNamesList.clear();\r\n            favouritesPricesList.clear();\r\n            favouritesOldPricesList.clear();\r\n            favouritesColourList.clear();\r\n\r\n            for (int i = 0; i < infoLoaded.size(); i++) {\r\n                String[] goodsInfo = String.valueOf(infoLoaded.get(infoLoaded.size()-1-i)).split(\"SPLITFORBUY\", 6);\r\n                favouritesUrlList.add(i, goodsInfo[0]);\r\n                favouritesImagesList.add(i, goodsInfo[1]);\r\n                favouritesNamesList.add(i, goodsInfo[2]);\r\n                if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.eldoradologo);                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.allologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.allo_colour));\r\n                }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.citruslogo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                }\r\n                favouritesPricesList.add(i, infoLoaded.get(i));\r\n                favouritesOldPricesList.add(i, infoLoadedUp.get(i));\r\n\r\n                if (Integer.parseInt(goodsInfo[5].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0) {\r\n                    if (Integer.parseInt(goodsInfo[4].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0){\r\n                        favouritesPricesList.add(i,  goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i,  goodsInfo[4]);\r\n                    } else{\r\n                        favouritesPricesList.add(i,  goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, \" \");\r\n                    }\r\n                } else {\r\n                    favouritesPricesList.add(i, context.getString(R.string.form_price));\r\n                    favouritesOldPricesList.add(i, \" \");\r\n                }\r\n\r\n            }\r\n            adapter1.notifyDataSetChanged();\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n\r\n\r\n        }else{\r\n            Toast.makeText(getActivity(),context.getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n    public void sortDown(){\r\n        if (isLoadedRozetka){\r\n            Log.d(\"TEST\", String.valueOf(infoLoaded));\r\n            boolean sorted = false;\r\n            String temp;\r\n            while(!sorted) {\r\n                sorted = true;\r\n                for (int i = 0; i < infoLoadedUp.size() - 1; i++) {\r\n\r\n                    String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                    String[] goodsInfoNext = String.valueOf(infoLoadedUp.get(i+1)).split(\"SPLITFORBUY\", 6);\r\n\r\n                    if (Integer.parseInt(goodsInfo[5].replace(\"грн\", \"\").replace(\" \", \"\")) < Integer.parseInt(goodsInfoNext[5].replace(\"грн\", \"\").replace(\" \", \"\"))) {\r\n                        temp = infoLoadedUp.get(i);\r\n                        infoLoadedUp.set(i, infoLoadedUp.get(i+1));\r\n                        infoLoadedUp.set(i+1, temp);\r\n                        sorted = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            Log.d(\"TEST\", String.valueOf(infoLoaded));\r\n\r\n            favouritesUrlList.clear();\r\n            favouritesImagesList.clear();\r\n            favouritesStoreImagesList.clear();\r\n            favouritesNamesList.clear();\r\n            favouritesPricesList.clear();\r\n            favouritesOldPricesList.clear();\r\n            favouritesColourList.clear();\r\n\r\n            for (int i = 0; i < infoLoadedUp.size(); i++) {\r\n                String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                favouritesUrlList.add(i, goodsInfo[0]);\r\n                favouritesImagesList.add(i, goodsInfo[1]);\r\n                favouritesNamesList.add(i, goodsInfo[2]);\r\n                if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.eldoradologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.allologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.allo_colour));\r\n                }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.citruslogo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                }\r\n                favouritesPricesList.add(i, infoLoadedUp.get(i));\r\n                favouritesOldPricesList.add(i, infoLoadedUp.get(i));\r\n\r\n                if (Integer.parseInt(goodsInfo[5].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0) {\r\n                    if (Integer.parseInt(goodsInfo[4].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0){\r\n                        favouritesPricesList.add(i, goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i,goodsInfo[4]);\r\n                    } else{\r\n                        favouritesPricesList.add(i,  goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, \" \");\r\n                    }\r\n                }else {\r\n                    favouritesPricesList.add(i, context.getString(R.string.form_price));\r\n                    favouritesOldPricesList.add(i, \" \");\r\n                }\r\n\r\n            }\r\n            adapter1.notifyDataSetChanged();\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n\r\n\r\n        }else{\r\n            Toast.makeText(getActivity(),context.getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public void sortUp(){\r\n        if (isLoadedRozetka){\r\n            Log.d(\"BEFORE\", String.valueOf(infoLoaded));\r\n            boolean sorted = false;\r\n            String temp;\r\n            while(!sorted) {\r\n                sorted = true;\r\n                for (int i = 0; i < infoLoadedUp.size() - 1; i++) {\r\n\r\n                    String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                    String[] goodsInfoNext = String.valueOf(infoLoadedUp.get(i+1)).split(\"SPLITFORBUY\", 6);\r\n\r\n                    Log.d(\"START\", String.valueOf(goodsInfo[2])+\", \"+goodsInfoNext[2]);\r\n                    Log.d(\"FIRST\", String.valueOf(goodsInfo[4])+\", \"+goodsInfoNext[4]);\r\n                    Log.d(\"SECOND\", String.valueOf(goodsInfo[5])+\", \"+goodsInfoNext[5]);\r\n\r\n                    if (Integer.parseInt(goodsInfo[5].replace(\"грн\", \"\").replace(\" \", \"\")) > Integer.parseInt(goodsInfoNext[5].replace(\"грн\", \"\").replace(\" \", \"\"))) {\r\n                        temp = infoLoadedUp.get(i);\r\n\r\n                        infoLoadedUp.set(i, infoLoadedUp.get(i+1));\r\n\r\n                        infoLoadedUp.set(i+1, temp);\r\n                        sorted = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            favouritesUrlList.clear();\r\n            favouritesImagesList.clear();\r\n            favouritesStoreImagesList.clear();\r\n            favouritesNamesList.clear();\r\n            favouritesPricesList.clear();\r\n            favouritesOldPricesList.clear();\r\n            favouritesColourList.clear();\r\n\r\n            for (int i = 0; i < infoLoadedUp.size(); i++) {\r\n                Log.d(\"TETS\", String.valueOf(infoLoadedUp.size() + \" \" + infoLoaded.size()));\r\n                String[] goodsInfo = String.valueOf(infoLoadedUp.get(i)).split(\"SPLITFORBUY\", 6);\r\n                favouritesUrlList.add(i, goodsInfo[0]);\r\n                favouritesImagesList.add(i, goodsInfo[1]);\r\n                favouritesNamesList.add(i, goodsInfo[2]);\r\n                if(goodsInfo[3].equals(\"ELDORADO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.eldoradologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.rozetka_colour));\r\n                }else if(goodsInfo[3].equals(\"ALLO\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.allologo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.allo_colour));\r\n                }if(goodsInfo[3].equals(\"CITRUS\")){\r\n                    favouritesStoreImagesList.add(i,R.drawable.citruslogo);\r\n                    favouritesColourList.add(i,ContextCompat.getColor(context,R.color.citrus_colour));\r\n                }\r\n                favouritesPricesList.add(i, infoLoadedUp.get(i));\r\n                favouritesOldPricesList.add(i, infoLoadedUp.get(i));\r\n\r\n                if (Integer.parseInt(goodsInfo[5].replace(\" \", \"\"). replace(\"грн\", \"\")) != 0) {\r\n                    if (Integer.parseInt(goodsInfo[4].replace(\" \", \"\").replace(\"грн\", \"\")) != 0) {\r\n                        favouritesPricesList.add(i, goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, goodsInfo[4]);\r\n                    } else {\r\n                        favouritesPricesList.add(i, goodsInfo[5]);\r\n                        favouritesOldPricesList.add(i, \" \");\r\n                    }\r\n                } else {\r\n                    favouritesPricesList.add(i, context.getString(R.string.form_price));\r\n                    favouritesOldPricesList.add(i, \" \");\r\n                }\r\n\r\n\r\n            }\r\n            adapter1.notifyDataSetChanged();\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n\r\n\r\n        }else{\r\n            Toast.makeText(getActivity(),context.getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    class MyAdapter extends ArrayAdapter<String> {\r\n\r\n        Context context;\r\n        List<String> rTitle = new ArrayList();\r\n        List<String> rDescription = new ArrayList();\r\n        List<String> rOldDescription = new ArrayList();\r\n        List<String> rImgs = new ArrayList();\r\n        List<Integer> rStoreImgs = new ArrayList();\r\n        List<String> rUrl = new ArrayList<>();\r\n        List<Integer> backgroundColour = new ArrayList<>();\r\n\r\n        String str1 = \"\";\r\n        String str2 = \"\";\r\n\r\n        MyAdapter(Context c, List<String> title, List<String> description , List<String> oldDescription, List<String> imgs, List<Integer> storeImgs, List<String> urls, List<Integer> backgroundColor) {\r\n            super(c, R.layout.goods_view, R.id.goodsTitleMain, title);\r\n            this.context = c;\r\n            this.rTitle = title;\r\n            this.rDescription = description;\r\n            this.rOldDescription = oldDescription;\r\n            this.rImgs = imgs;\r\n            this.rStoreImgs = storeImgs;\r\n            this.rUrl = urls;\r\n            this.backgroundColour = backgroundColor;\r\n\r\n        }\r\n\r\n\r\n        @NonNull\r\n        @Override\r\n        public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n            LayoutInflater layoutInflater = (LayoutInflater) getActivity().getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n            View goodsView = layoutInflater.inflate(R.layout.goods_view, parent, false);\r\n            ImageView images = goodsView.findViewById(R.id.goodsImageMain);\r\n            ImageView storeImages = goodsView.findViewById(R.id.storeImageMain);\r\n            ImageView imageDelete = goodsView.findViewById(R.id.goodsFavourite);\r\n            // ImageView imageBackground = goodsView.findViewById(R.id.goodsBackground);\r\n            CardView backgroundCard = goodsView.findViewById(R.id.backgroungCard);\r\n            TextView myTitle = goodsView.findViewById(R.id.goodsTitleMain);\r\n            TextView myDescription = goodsView.findViewById(R.id.goodsPriceMain);\r\n            TextView myOldDescription = goodsView.findViewById(R.id.oldGoodsPriceMain);\r\n\r\n            // now set our resources on views\r\n\r\n\r\n            myDescription.setTextColor(ContextCompat.getColor(context,R.color.price_color));\r\n            myOldDescription.setTextColor(ContextCompat.getColor(context,R.color.oldprice_colour));\r\n            Glide.with(context).load(rImgs.get(position)).into(images);\r\n            storeImages.setImageResource(rStoreImgs.get(position));\r\n            backgroundCard.setCardBackgroundColor(backgroundColour.get(position));\r\n\r\n\r\n            myTitle.setText(rTitle.get(position));\r\n            try {\r\n                myDescription.setText(rDescription.get(position));\r\n                myOldDescription.setText(rOldDescription.get(position));\r\n            }  catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            imageDelete.setImageResource(R.drawable.ic_baseline_delete_24);\r\n\r\n\r\n            imageDelete.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    //imageDelete.setClickable(false);\r\n\r\n\r\n                    //------------------------------------------------------------------------------------------\r\n\r\n                    if (isLoadedRozetka){\r\n                        if (isConnected()){\r\n                            mDatabase.child(\"Users\").child(user.getUid()).addValueEventListener(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    Map<String, Object> td = (HashMap<String,Object>) snapshot.getValue();\r\n\r\n                                    for (DataSnapshot childDataSnapshot : snapshot.getChildren()) {\r\n                                        DatabaseReference objRef = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(user.getUid()).child( childDataSnapshot.getKey());\r\n                                        Map<String,Object> taskMap = new HashMap<String,Object>();\r\n                                        objRef.updateChildren(taskMap);\r\n\r\n\r\n\r\n                                        try {\r\n                                            String str = favouritesNamesList.get(position).replace(\"\\nCITRUS\", \"\").replace(\"\\nALLO\", \"\").replace(\"\\nELDORADO\", \"\");\r\n\r\n                                            if (String.valueOf(childDataSnapshot.getValue()).contains(str)){\r\n\r\n\r\n                                                for (int i = 0; i < infoLoaded.size(); i++) {\r\n                                                    str1 = infoLoaded.get(i).split(\"SPLITFORBUY\", 6)[2].replace(\"CITRUS\", \"\").replace(\"ALLO\", \"\").replace(\"ELDORADO\", \"\");\r\n                                                    str2 = favouritesNamesList.get(position).replace(\"CITRUS\", \"\").replace(\"ALLO\", \"\").replace(\"ELDORADO\", \"\");\r\n\r\n                                                    Log.d(\"TEST1\", str1);\r\n\r\n                                                    if (str2.contains(str1)){\r\n\r\n                                                        Log.d(\"TEST2\", str1);\r\n\r\n                                                        infoLoaded.remove(i);\r\n\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n\r\n\r\n                                                infoLoadedUp.clear();\r\n                                                for (int i = 0; i < infoLoaded.size(); i++) {\r\n                                                    infoLoadedUp.add(i, infoLoaded.get(i));\r\n                                                }\r\n\r\n                                                try {\r\n                                                    favouritesUrlList.remove(favouritesUrlList.size()-1-position);\r\n                                                    favouritesImagesList.remove(position);\r\n                                                    favouritesNamesList.remove(position);\r\n                                                    favouritesPricesList.remove(position);\r\n                                                    //favouritesList.remove(favouritesList.size()-1-position);\r\n\r\n                                                    adapter1.notifyDataSetChanged();\r\n                                                    progressBar.setVisibility(View.GONE);\r\n\r\n                                                } catch (Exception e) {\r\n                                                    e.printStackTrace();\r\n                                                }\r\n\r\n                                                adapter1.notifyDataSetChanged();\r\n                                                progressBar.setVisibility(View.GONE);\r\n\r\n                                                mDatabase.child(\"Users\").child(user.getUid()).child(childDataSnapshot.getKey()).setValue(null);\r\n                                                mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n\r\n                                                errorTextChoosen.setVisibility(View.INVISIBLE);\r\n                                                emptyTextChoosen.setVisibility(View.INVISIBLE);\r\n                                                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                                                favouritesUrlList.clear();\r\n                                                favouritesImagesList.clear();\r\n                                                favouritesStoreImagesList.clear();\r\n                                                favouritesNamesList.clear();\r\n                                                favouritesPricesList.clear();\r\n                                                favouritesOldPricesList.clear();\r\n                                                favouritesColourList.clear();\r\n\r\n                                                adapter1.notifyDataSetChanged();\r\n\r\n                                                loadChoosen();\r\n\r\n                                                break;\r\n                                            }\r\n                                        } catch (Exception e) {\r\n                                            e.printStackTrace();\r\n                                            //Toast.makeText(ChosenGoodsActivity.this, \"Загрузились не все товары, подождите\", Toast.LENGTH_SHORT).show();\r\n                                        }\r\n\r\n\r\n\r\n                                        mDatabase.child(\"Users\").child(user.getUid()).removeEventListener(this);\r\n                                    }\r\n                                }\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                }\r\n                            });\r\n                        } else{\r\n                            Toast.makeText(getActivity(),context.getString(R.string.internet_error),Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    else{\r\n                        Toast.makeText(getActivity(),getString(R.string.goods_no_loaded),Toast.LENGTH_SHORT).show();\r\n                    }\r\n\r\n\r\n\r\n                    //------------------------------------------------------------------------------------------\r\n                }\r\n            });\r\n\r\n            return goodsView;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/goodsfinder/FavouriteFragment.java	(revision 9bd3e1ca1baa43a29d97fe13aedbf9675380699a)
+++ app/src/main/java/com/example/goodsfinder/FavouriteFragment.java	(date 1619386801735)
@@ -555,6 +555,9 @@
                 emptyTextChoosen.setVisibility(View.INVISIBLE);
                 progressBar.setVisibility(View.VISIBLE);
 
+
+
+
                 favouritesUrlList.clear();
                 favouritesImagesList.clear();
                 favouritesStoreImagesList.clear();
@@ -562,11 +565,13 @@
                 favouritesPricesList.clear();
                 favouritesOldPricesList.clear();
                 favouritesColourList.clear();
-                isLoadedRozetka = false;
                 positionsRozetka.clear();
+                isLoadedRozetka = false;
                 iRozetka = 0;
                 adapter1.notifyDataSetChanged();
                 infoLoaded.clear();
+                infoLoadedUp.clear();
+                favouritesList.clear();
 
                 loadChoosen();
             } else {
